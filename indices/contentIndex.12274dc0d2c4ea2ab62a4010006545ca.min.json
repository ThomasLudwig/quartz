{"/":{"title":"ü™¥ Quartz 3.","content":"\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast natural-language [[notes/search]]\n2. Customizable and hackable design based on [Hugo](https://gohugo.io/)\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (ÊµãËØï) | CJK + Latex Support]] and [[notes/callouts | Admonition-style callouts]]\n5. Support for both Markdown Links and Wikilinks\n\nCheck out some of the [amazing gardens that community members](notes/showcase.md) have published with Quartz or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Get Started\n\u003e üìö Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\nReturning user? Figure out how to [[notes/updating|update]] your existing Quartz garden.\n\nIf you prefer browsing the contents of this site through a list instead of a graph, you see a list of all [setup-related notes](/tags/setup).\n\n### Troubleshooting\n- üöß [Troubleshooting and FAQ](notes/troubleshooting.md)\n- üêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- üëÄ [Discord Community](https://discord.gg/cRFFHYye7t)\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/2022-2023/BioInfo-TP1-Unix-Linux":{"title":"BioInfo TP1 - Unix \u0026 Linux","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\n\u003e [!success] :book: *Linux is User-Friendly too, it‚Äôs just more peaky who its friends are...*\n\n## 1. Why Linux ?\n- Write programs that do one thing and do it well.\n- Write programs that work together.\n- Write programs that handle text streams, because that is a universal interface.\n \n## 2. Why learn Linux basic command lines ?\n\n- Simple : do one thing\n- Flexible : built for reuse\n- Versatile : can do anything/everything\n- Fast : no graphics overload\n- Ubiquitous : available on all machines‚Äî Permanent : First released in 1971\n\n## 3. shell (command-line interpreter)\n\nA Unix **terminal** is a command-line interpreter or **shell** that provides a traditional Unix-like command line user interface. Users direct the operation of the computer by entering commands as text for a command line interpreter to execute, or by creating text scripts of one or more such commands.\n\n## 4.  bash (one type of shell, like sh, ksh, zsh,...)\n\nbash is a command processor that typically runs in a text window, where the user types commands that causeactions.\n\n## 5.  exit (leave the interpreter)\n\n```bash\nbash\nexit\n```\n\n## 6. Linux Shortcuts\n\n- Previous command : $\\uparrow$ Key\n- Next command : $\\downarrow$ Key\n- Autocompletion : $\\longrightarrow$ (*TAB*) Key\n\n\u003e [!info] ***Copy+Paste***: \n\u003e - ***Unix/Unix***: \n\u003e     1. Select text \n\u003e     2. middle-click (wheel button) where you want to paste\n\u003e - ***Windows/Unix***: \n\u003e     1. Select text and Ctrl-C in Windows \n\u003e     2. middle-click (wheel button) where you want to paste in Unix\n\u003e - ***Unix/Windows***: \n\u003e     1. Select text in Unix \n\u003e     2. Ctrl-V to paste in Windows\n\n## 7. echo (print a message)\n\nCommand 7.1\n```bash\necho\n```\nCommand 7.2\n```bash\necho \"ATGC\"\n```\nCommand 7.3\n```bash\necho -n \"ATGC\"\n```\nCommand 7.4\n```bash\necho -e  \"\u003eseq\\nATGC\"\n```\nCommand 7.5\n```bash\necho -e  \"\u003eseq\\tATGC\"\n```\nCommand 7.6\n```bash\necho -e -n  \"\u003eseq\\nATGC\"\n```\n## 8. man (user manual)\n\n```bash\nman echo\n```\n```bash\nman man\n```\n\nleave by pressing `q`\n\n## 9. filesystem\n\n- 'home' (See `~`)\n- 'root'\n\n```bash\n/\n+-- /home/\n|   +-- /home/tludwig/\n|       +-- /home/tludwig/seqlink/\n|       |   +-- /home/tludwig/seqlink/SEQLinkage-master/\n|       |   +-- /home/tludwig/seqlink/SEQLinkage-master.zip\n|       +-- /home/tludwig/linux/\n|       |   +-- /home/tludwig/linux/installed.pkg\n|       +-- /home/tludwig/file1.txt\n|       +-- /home/tludwig/file2.txt\n+-- /etc\n+-- /usr\n```\n\n## 10. path\n\n- A Unix/Linux pathname is a text string made up of one or more names separated by slashes\n- Destination object may be file, directory, or other\n- `.` current directory\n- `..` parent directory\n- `/` root directory\n- `/home/user/directory/file.txt` : absolute path\n- `directory/file.txt`: relative path to the current directory. Same as `./directory/file.txt`\n\n## 11. pwd (Print working directory)\n*Where am I ?*\n```bash\npwd\n```\n## 12. ls (Lists files and folders)\nCommande 12.1\n```bash\nls\n```\nCommande 12.2\n```bash\nls .\n```\nCommande 12.3\n```bash\nls /\n```\nCommande 12.4\n```bash\nls ../\n```\nCommande 12.5\n```bash\nls ../..\n```\nCommande 12.6\n```bash\nls -1 /\n```\nCommande 12.7\n```bash\nls -l /\n```\nCommande 12.8\n```bash\nls does_not_exists\n```\n### file globbing `*` means *anything*\n\nCommande 12.9\n```bash\nls /home/* #all files in /home/\n```\nCommande 12.10\n```bash\nls /etc/*.conf #all files in /etc/ that end with .conf\n```\nCommande 12.11\n```bash\nls -d /home/*i* #all /home subdirectory that contain i\n```\n\n## 13. cd (Change Directory)\nCommande 13.1\n```bash\ncd ..\n```\nCommande 13.2\n```bash\ncd .\n```\nCommande 13.3\n```bash\ncd \n```\nCommande 13.4\n```bash\ncd ~\n```\nCommande 13.5\n```bash\ncd /\n```\nCommande 13.6\n```bash\ncd -\n```\n## 14. mkdir (make directory)\nCommandes 14.1\n```bash\nmkdir dir1 dir2 dir3\nls\n```\nCommande 14.2\n```bash\nmkdir a/b/c/d\n```\nCommande 14.3\n```bash\nmkdir -p a/b/c/d\nls\nls a\nls a/b/c\n```\n\n## 15. cp (copy files or folders)\nCommandes 15.1\n```bash\ncp /home/tludwig/master2ggb/file1.txt file1.txt\nls\n```\nCommande 15.2\n```bash\ncp file1.txt dir1\nls dir1\n```\nCommande 15.3\n```bash\ncp file1.txt dir1/file2.txt\nls dir1\n```\nCommande 15.4\n```bash\ncp dir1 dir2\n```\nCommande 15.5\n```bash\ncp -r dir1 dir2\nls dir2\n```\n## 16. rmdir (remove directory)\n```bash\nrmdir dir1 dir2 dir3 a\nls\n```\n## 17. rm (remove files or folders)\nCommande 17.1\n```bash\nrm file1.txt\n```\nCommande 17.2\n```bash\nrm  does_not_exits.txt\n```\nCommande 17.3\n```bash\nrm -f does_not_exits.txt\n```\nCommande 17.4\n```bash\nrmdir a\n```\nCommande 17.5\n```bash\nrm -rf a\nls\n```\nCommande 17.6\n```bash\nrm dir1\n```\nCommande 17.7\n```bash\nrm -rf dir1 dir2\n```\n\n## 18. seq (Create a sequence)\nCommande 18.1\n```bash\nseq 10\n```\nCommande 18.2\n```bash\nseq 2 9\n```\nCommande 18.3\n```bash\nseq 2 3 9\n```\n## 19. cat (Concatenate files)\nPr√©paration\n```bash\ncp /home/tludwig/master2ggb/file1.txt .\ncp /home/tludwig/master2ggb/file2.txt .\n```\nCommande 19.1\n```bash\ncat file1.txt\n```\nCommande 19.2\n```bash\ncat file2.txt\n```\nCommande 19.3\n```bash\ncat file1.txt file2.txt\n```\nCommande 19.4\n```bash\ncat -n file1.txt file2.txt\n```\n\n## 20. standard input\nWhere the data are read from (default : keyboard)\n- `\u003c` uses a file as standard input.\n## 21. standard output (stdout)\nWhere the results are written (default : screen)\n- `\u003e` redirects standard output to a file (and overwrites the file if it already exists).\n- `\u003e\u003e` Appends standard output to a file.\n\nSans redirection\n```bash\nls /root /bin\n```\nCommande 21.1\n```bash\nls /root /bin \u003e stdout.txt\ncat stdout.txt\n```\nCommande 21.2\n```bash\necho \"new data\" \u003e stdout.txt\ncat stdout.txt\n```\nCommande 21.3\n```bash\nls /root ~ \u003e\u003e stdout.txt\ncat stdout.txt\n```\n## 22. standard error (stderr)\nWhere the error messages are written (default : screen)\n- `2\u003e` redirects standard error to a file (and overwrites the file if it already exists)\n\nCommande 22.1\n```bash\nls /root /bin 2\u003e stderr.txt\ncat stderr.txt\n```\nCommande 22.2\n```bash\nls /root /bin  \u003e stdout.txt 2\u003e stderr.txt\ncat stdout.txt\ncat stderr.txt\n```\n## 23. redirection (stdout | stdin )\n- `|` (*pipe* : `AltGR+6` for normal people `Alt+Maj+L` for Mac users) redirects standard output of a program as standard input of another.\n\nSans redirection\n```bash\nls /\n```\nCommande 23.1\n```bash\nls / | cat -n\n```\nCommande 23.2\n```bash\necho \"1601627*5\" | bc\n```\n\n## 24. wc (Word count)\nCommande 24.1\n```bash\ncat /etc/libaudit.conf\nwc /etc/libaudit.conf\n```\nCommande 24.2\n```bash\nseq 1000000 | wc -c\n```\nCommande 24.3\n```bash\nseq 1000000 | wc -l\n```\nCommande 24.4\n```bash\necho | wc -c\n```\nCommande 24.5\n```bash\necho -n | wc -c\n```\n\n## 25. stop input stdin : Ctrl-D\n```bash\nbc\n5*5\n2+9\n```\n:keyboard: \u003cctrl+D\u003e\n## 26. stop a processus Ctrl-C\n```bash\nseq 10000000\n```\n:keyboard: \u003cctrl+C\u003e\n## 27. head (output the first part of files)\nCommande 27.1\n```bash\nseq 10000 | head\n```\nCommande 27.2\n```bash\nseq 10000 | head -3\n```\n## 28. tail (output the last part of files)\nCommande 28.1\n```bash\nseq 10000 | tail\n```\nCommande 28.2\n```bash\nseq 10000 | tail -3\n```\nCommande 28.3\n```bash\ncat /home/tludwig/master2ggb/table.tsv\n```\nCommande 28.4\n```bash\ncat /home/tludwig/master2ggb/table.tsv | tail -n+2\n```\n\n\u003e [!warning] Cette commande doit √™tre utilis√© en m√™me temps pour tout le groupe, attendre le feu vert :traffic_light: \n\u003e \n\u003e Commande 27.2\n\u003e ```bash\n\u003e tail -f /home/tludwig/master2ggb/log.txt\n\u003e ```\n\u003e :keyboard: \u003cctrl+C\u003e\n\n## 29. paste (merge lines of files)\nPr√©paration\n```bash\nseq 1 10 \u003e a \ncat a \nseq 2 12 \u003e b \ncat b \n```\nCommande 29.1\n```bash\npaste a b\n```\nCommande 29.2\n```bash\nseq 20 | paste - -\n```\nCommande 29.3\n```bash\nseq 20 | paste - - -\n```\n\n## 30. cut (remove sections from each line of files)\nSans cut\n```bash\nseq 1 100 | paste - - - - -\n```\nCommande 30.1\n```bash\nseq 1 100 | paste - - - - - | cut -f 3\n```\nCommande 30.2\n```bash\nseq 1 100 | paste - - - - - | cut -f 3-\n```\nCommande 30.3\n```bash\nseq 1 100 | paste - - - - - | cut -f 2-4\n```\nCommande 30.4\n```bash\nseq 1 100 | paste - - - - - | cut -f -2\n```\nCommande 30.4\n```bash\nseq 1 100 | paste - - - - - | cut -f 1,5\n```\nCommande 30.5\n```bash\necho \"ABCDE\" | cut -c 2\n```\nCommande 30.6\n```bash\necho \"ABCDE\" | cut -c 2,5\n```\nCommande 30.7\n```bash\necho \"ABCDE\" | cut -c 2-5\n```\nCommande 30.8\n```bash\necho \"AA:BB:CC:DD:EE:FF\" | cut -d':' -f2\n```\n\n## 31. sort (sort lines of text files)\nCommande 31.1\n```bash\nseq 1 25 | sort\n```\nCommande 31.2\n```bash\nseq 1 25 | sort -n\n```\nCommande 31.3\n```bash\nseq 1 25 | sort -n -r\n```\nCommande 31.4\n```bash\ncat /home/tludwig/master2ggb/chrom.list\n```\nCommande 31.5\n```bash\ncat /home/tludwig/master2ggb/chrom.list | sort\n```\nCommande 31.6\n```bash\ncat /home/tludwig/master2ggb/chrom.list | sort -n\n```\nCommande 31.7\n```bash\ncat /home/tludwig/master2ggb/chrom.list | sort -V\n```\nCommande 31.8\n```bash\ncat /home/tludwig/master2ggb/table.tsv\n```\nCommande 31.9\n```bash\ncat /home/tludwig/master2ggb/table.tsv | tail -n+2 | sort -t $'\\t' -k2n\n```\nCommande 31.10\n```bash\ncat /home/tludwig/master2ggb/table.tsv | tail -n+2 | sort -t $'\\t'  -k3r -k2n\n```\n\n## 32. uniq (report or omit repeated lines)\n\nUtiliser un fichier de variant\n\n\nSans uniq\n```bash\necho -e \"A\\nA\\nA\\nB\\nB\\nA\"\n```\nCommande 32.1\n```bash\necho -e \"A\\nA\\nA\\nB\\nB\\nA\" | uniq\n```\nCommande 32.2\n```bash\necho -e \"A\\nA\\nA\\nB\\nB\\nA\" | sort | uniq\n```\nCommande 32.3\n```bash\necho -e \"A\\nA\\nA\\nB\\nB\\nA\" | sort -u\n```\nCommande 32.4\n```bash\necho -e \"A\\nA\\nA\\nB\\nB\\nA\" | sort | uniq -c\n```\nCommande 32.5\n```bash\necho -e \"A\\nA\\nA\\nB\\nB\\nA\" | sort | uniq -c | sort -n\n```\n## 33. grep (print lines matching a pattern\n\najouter grep -v\n\nSans grep\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\"\n```\nCommande 33.1\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep AT\n```\nCommande 33.2\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep GAATTC\n```\nCommande 33.3\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep -B1 GAATTC\n```\nCommande 33.4\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep -A1 gene2\n```\nCommande 33.5\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep -E '(GAATTC|CCT)' \n```\nCommande 33.6\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep -o A | wc -l\n```\nCommande 33.7\n```bash\necho -e \"\u003egene1\\nATGGAATTCAAAA\\n\u003egene2\\nCCCTGCTGATCGATCGATCGT\" | grep -o A\n```\n## 34. more / less (file perusal)\n```bash\nseq 1000000 | more\nseq 1000000 | less\n```\n- `\u003center\u003e` to skip 1 line\n- `\u003cspace\u003e` to skip 1 page\n- `q` to quit\n- arrows in `less` but not in `more`\n\n## 35. touch (Change file timestamp, or create a file)\n```bash\ntouch new_file\nls -l\n```\n\n## 36. find (search for files in a directory hierarchy)\nCommande 36.1\n```bash\nfind ~ -type f\n```\nCommande 36.2\n```bash\nfind /etc -type f -name \"*.conf\"\n```\n\n## 37. tr (Translate, squeeze, and/or delete characters)\nCommande 37.1\n```bash\necho \"ATAAAAACGACTTTTGA\" | tr \"T\" \"U\"\n```\nCommande 37.2\n```bash\necho \"ATAAAAACGACTTTTGA\" | tr -s \"A\"\n```\nCommande 37.3\n```bash\necho \"ATAAAAACGACTTTTGA\" | tr -d \"A\"\n```\nCommande 37.4\n```bash\necho \"ATAAAAACGACTTTTGA\" | tr \"[ATGC]\" \"[TACG]\"\n```\n\n## 38. rev (reverse lines characterwise)\n```bash\necho \"ATAAAAACGACTTTTGA\" | tr \"[ATGC]\" \"[UACG]\" | rev\n```\n\n## 39. gzip (compress files)\nSans gzip\n```bash\nseq 100000 | wc -c\n```\nCommande 39.1\n```bash\nseq 100000 | gzip | wc -c\n```\nSans gzip\n```bash\ncat file1.txt\n```\nCommande 39.2\n```bash\ngzip file1.txt\ncat file1.txt.gz\n```\n## 40. gunzip / zcat (expand files)\nCommande 40.1\n```bash\nzcat file1.txt.gz\n```\nCommande 40.2\n```bash\ngunzip file1.txt.gz\n```\nCommande 40.3\n```bash\nseq 10 | gzip | gunzip \n```\n## 41. diff / sdiff (compare files line by line)\nPr√©paration\n```bash\nseq 20 \u003e a \nseq 10 30 \u003e b \n```\nCommande 41.1\n```bash\ndiff a b\n```\nCommande 41.2\n```bash\nsdiff a b\n```\n## 42. split (split a file into pieces)\n```bash\nseq 1 100 | split -l 20 - tmp_\nls\ncat tmp_ab\n```\n## 43. fold (wrap each input line to fit in specified width)\nSans fold\n```bash\necho -e \"\u003eGene1\\nATCGATCGATCGATGACTAGCTAGTCATCGATCGACTGATCTACGTC\"\n```\nCommande 43.1\n```bash\necho -e \"\u003eGene1\\nATCGATCGATCGATGACTAGCTAGTCATCGATCGACTGATCTACGTC\" | fold -w 10\n```","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/2022-2023/BioInfo-TP2-Next-Generation-Sequencing":{"title":"BioInfo TP2 - Next Generation Sequencing","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\nAu cours de cette s√©ance de TP nous allons chercher les mutations *de novo* d‚Äôun enfant dont l‚Äôexome ainsi que celui de ses deux parents ont √©t√© s√©quenc√©s par la technologie Illumina. Il vous faudra aligner les reads sur un g√©nome de r√©f√©rence, extraire les mutations et annoter ces variations.\n\n## 1. R√©cup√©ration des donn√©es FASTQ\n\n### 1.1. T√©l√©chargez et extrayez le fichier zip\n```bash\nmkdir ~/TP2\ncd ~/TP2\nwget http://lysine.univ-brest.fr/~tludwig/master2/DATA.zip\nunzip DATA.zip\n```\nDans le r√©pertoire `DATA` se trouvent les fichiers FASTQ contenant les short-reads pour father/mother/child.\n```bash\nDATA/child.R2.ab.fq.gz\nDATA/child.R2.aa.fq.gz\nDATA/father.R1.aa.fq.gz\nDATA/father.R2.aa.fq.gz\nDATA/mother.R2.aa.fq.gz\nDATA/mother.R1.ab.fq.gz\nDATA/mother.R2.ab.fq.gz\nDATA/father.R1.ab.fq.gz\nDATA/father.R2.ab.fq.gz\nDATA/child.R1.aa.fq.gz\nDATA/child.R1.ab.fq.gz\nDATA/mother.R1.aa.fq.gz\n```\n\nNous travaillons en **paired-end** : il y a donc un fichier **R1** et **R2** pour chaque individu. \n\n![](http://lysine.univ-brest.fr/~tludwig/paired-end-read.jpg)\n\nPar ailleurs on peut disposer de plusieurs jeux de donn√©es pour un m√™me individu. C'est notament le cas lorsqu'on a utiliser plusieurs *lanes* pour un individu. Dans notre exemple, chaque individu poc√®de des donn√©es `aa` et `ab`.\n\n### 1.2. Comptez le nombre de lignes `R1.aa` chez l'enfant; V√©rifiez que c'est un multiple de 4.\n```bash\nzcat DATA/child.R1.aa.fq.gz | wc -l\n```\n\n### 1.3. Comptez le nombre de lignes `R2.aa` chez l'enfant; Pourquoi ce m√™me nombre ?\n```bash\nzcat DATA/child.R2.aa.fq.gz | wc -l\n```\n\n### 1.4. Comparez les 10 premiers noms de reads de l'enfant entre le fichier R1 et R2, quelle est la diff√©rence ?\n```bash\nzcat DATA/child.R1.aa.fq.gz | paste - - - - | cut -f 1 | head\nzcat DATA/child.R2.aa.fq.gz | paste - - - - | cut -f 1 | head\n```\n\n### 1.5. Quelle est la longueur des short-reads R1 chez l'enfant ?\n```bash\nzcat DATA/child.R1.aa.fq.gz | paste - - - - | cut -f 2 | head\nzcat DATA/child.R1.aa.fq.gz | paste - - - - | cut -f 2 | head -1 | tr -d '\\n'| wc -c\n```\n\n### 1.6. Dans les short-reads R1 de l'enfant, extrayez les bases des s√©quences d'ADN, quelle est la proportion de ces bases (nombre de A, nombre de T, nombre de G, etc.) ?  n'y a-t-il que A-T-G-C ?\n```bash\nzcat DATA/child.R1.aa.fq.gz | paste - - - - | cut -f 2 | grep -o . | sort | uniq -c\n```\n\nici `grep` utilise une *expression r√©guli√®re* ou *Regex*. C'est un language qui permet de d√©crire un texte. Le caract√®re `.`  signifie *n'importe quel caract√®re*\n\n### 1.7. Quels sont les caract√®res ascii de qualit√© que l'on trouve dans les lignes de qualit√© ?\n```bash\nzcat DATA/child.R1.aa.fq.gz | paste - - - - | cut -f 4 | grep -o . | sort | uniq | paste - - - - - -\n```\n\n## 2. R√©cup√©ration du g√©nome de r√©f√©rence\nPour aller vite, nous nous contenterons des chromosomes 22 et de l'ADN mitochondrial. \n\n### 2.1. T√©l√©chargez les s√©quences `.fa.gz` **chr22** et **chrM** de la version **hg19/GRCh37** du g√©nome humain.\n```bash\nwget \"http://lysine.univ-brest.fr/~tludwig/master2/hg19/chr22.fa.gz\"\nwget \"http://lysine.univ-brest.fr/~tludwig/master2/hg19/chrM.fa.gz\"\n```\n\n### 2.2. d√©zippez les deux fichiers.\n```bash\ngunzip chr22.fa.gz chrM.fa.gz\n```\n\n### 2.3. Quelle est la taille du chromosome 22 ? Quelle est la taille du chrM ?\n```bash\ngrep -v '\u003e' chr22.fa | tr -d '\\n' | wc -c\ngrep -v '\u003e' chrM.fa  | tr -d '\\n' | wc -c\n```\n\n### 2.4. Quelles sont les premi√®res bases du chromosomes 22 ?\n```bash\nless chr22.fa\n```\n\n\u003c!-- N\n\nthere are still hundreds of unresolved gaps which account for about 5% of the total sequence length (\u003e150Mb).\n\nGaps au sein des chromosome (region en repeat TTAATATTAATATTAATA)\nGaps au niveau des telomeres et centromeres : l'ADN n'est pas totalement d√©compact√© au cours du s√©quen√ßage dans ces r√©gions.\n\n--\u003e\n\n### 2.5. Pourquoi observez-vous cela ? Combien de lignes y-a-t-il avant que cela change ?\n```bash\ncat -n chr22.fa | grep -v '\u003e'  | grep -v 'N' | head \n```\n\n### 2.6. A l'aide de cat, concat√©nez ces deux fichiers dans un fichier que vous nommerez `ref.fa`\n```bash\ncat chr22.fa  chrM.fa \u003e ref.fa\n```\n\n\u003c!-- Majuscule/Minuscule \nLower case letters are most commonly used to represent ‚Äúsoft-masked sequences‚Äù\n\n\"Soft-masked\" assembly sequence in one file. Repeats from RepeatMasker and Tandem Repeats Finder (with period of 12 or less) are shown in lower case; non-repeating sequence is shown in upper case.\n\nThere are three types of Ensembl reference genomes: unmasked, soft-masked and masked. Generally speaking, it's recommended to use unmasked reference genomes builds for alignment. Masking is used to detect and conceal interspersed repeats and low complexity DNA regions so that they could be processed properly by alignment tools.\n--\u003e\n\n## 3. Prise en main de BWA\n*BWA* est l'outil qui va nous permettre de mapper les reads sur le g√©nome de r√©f√©rence. *BWA* lui-m√™me contient une s√©rie de sous programmes que l'on peut lister en tapant `bwa`\n```\nbwa\n\nProgram: bwa (alignment via Burrows-Wheeler transformation)\n\nUsage:   bwa \u003ccommand\u003e [options]\n\nCommand: index         index sequences in the FASTA format\n         mem           BWA-MEM algorithm\n(...)\nOn peut obtenir l'aide de chaque sous-programme en invoquant le nom du sous-programme.\nbwa index\n\nUsage:   bwa index [-a bwtsw|is] [-c] \u003cin.fasta\u003e\n\nOptions: -a STR    BWT construction algorithm: bwtsw or is [auto]\n         -p STR    prefix of the index [same as fasta name]\n         -6        index files named as \u003cin.fasta\u003e.64.* instead of \u003cin.fasta\u003e.* \n```\n\n## 4. Prise en main de SAMTOOLS\n*samtools* est le couteau suisse des formats en NGS. Tout comme *bwa*, *samtools* lui-m√™me contient une s√©rie de sous programmes que l'on peut afficher en tapant `samtools`\n```\nsamtools\n\nProgram: samtools (Tools for alignments in the SAM format)\nVersion: 0.1.19-44428cd\n\nUsage:   samtools \u003ccommand\u003e [options]\n\nCommand: view        SAM\u003c-\u003eBAM conversion\n         sort        sort alignment file\n         mpileup     multi-way pileup\n         depth       compute the depth\n         faidx       index/extract FASTA\n         tview       text alignment viewer\n         index       index alignment\n         idxstats    BAM index stats (r595 or later)\n         fixmate     fix mate information\n         flagstat    simple stats\n         calmd       recalculate MD/NM tags and '=' bases\n         merge       merge sorted alignments\n         rmdup       remove PCR duplicates\n         reheader    replace BAM header\n         cat         concatenate BAMs\n         bedcov      read depth per BED region\n         targetcut   cut fosmid regions (for fosmid pool only)\n         phase       phase heterozygotes\n         bamshuf     shuffle and group alignments by name\n\n(...)\n```\nOn peut √©galement obtenir l'aide de chaque sous-programme en invoquant le nom du sous-programme.\n```\nsamtools view\n\nUsage:   samtools view [options] \u003cin.bam\u003e|\u003cin.sam\u003e [region1 [...]]\n\nOptions: -b       output BAM\n         -h       print header for the SAM output\n         -H       print header only (no alignments)\n         -S       input is SAM\n         -u       uncompressed BAM output (force -b)\n         -1       fast compression (force -b)\n         -x       output FLAG in HEX (samtools-C specific)\n         -X       output FLAG in string (samtools-C specific)\n         -c       print only the count of matching records\n         -B       collapse the backward CIGAR operation\n         -@ INT   number of BAM compression threads [0]\n         -L FILE  output alignments overlapping the input BED FILE [null]\n         -t FILE  list of reference names and lengths (force -S) [null]\n         -T FILE  reference sequence file (force -S) [null]\n         -o FILE  output file name [stdout]\n         -R FILE  list of read groups to be outputted [null]\n         -f INT   required flag, 0 for unset [0]\n         -F INT   filtering flag, 0 for unset [0]\n         -q INT   minimum mapping quality [0]\n         -l STR   only output reads in library STR [null]\n         -r STR   only output reads in read group STR [null]\n         -s FLOAT fraction of templates to subsample; integer part as seed [-1]\n         -?       longer help\n```\n\n## 5. Construction de l'index du g√©nome de r√©f√©rence\n### 5.1. Construire l'index √† l'aide de bwa index\n```bash\nbwa index ref.fa\n```\ndevrait afficher quelque chose dans le genre :\n```\n[bwa_index] Pack FASTA... 0.51 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=102642274, availableWord=19222168\n[BWTIncConstructFromPacked] 10 iterations done. 31707250 characters processed.\n[BWTIncConstructFromPacked] 20 iterations done. 58575122 characters processed.\n[BWTIncConstructFromPacked] 30 iterations done. 82451330 characters processed.\n[BWTIncConstructFromPacked] 40 iterations done. 102642274 characters processed.\n[bwt_gen] Finished constructing BWT in 40 iterations.\n[bwa_index] 32.52 seconds elapse.\n[bwa_index] Update BWT... 0.26 sec\n[bwa_index] Pack forward-only FASTA... 0.40 sec\n[bwa_index] Construct SA from BWT and Occ... 7.81 sec\n[main] Version: 0.7.12-r1039\n[main] CMD: bwa index ref.fa\n[main] Real time: 41.542 sec; CPU: 41.500 sec\n```\n\n### 5.2. V√©rifiez que des fichiers d'index ont √©t√© cr√©√©s\n```bash\nls ref.fa.*\n```\n\n## 6. Mapping des s√©quences fastq sur la r√©f√©rence\nMaintenant que l'index du g√©nome de r√©f√©rence a √©t√© cr√©√©, nous cherchons a connaitre la position des reads sur ce g√©nome de r√©f√©rence.\n\n:::info\n***synopsis*** de la commande *bwa* pour mapper les reads \n```bash\nbwa mem  -R '@RG\\tID:SAMPLENAME-aa\\tSM:SAMPLENAME' reference.fa \u003e sample.R1.gz sample.R2.gz \u003e sample.sam\n```\nL‚Äôoption `-R` permet de cr√©er un **READ-GROUP** pour associer les reads a un √©chantillon (donc ici, remplacez SAMPLENAME par '*child*').\n:::warning\n:warning: ne pas taper cette commande :warning: \n:::\n\n\nLa sortie standard de cette commande est un '*fichier texte*' **SAM**.\n\n### 6.1. Mappez les reads de l'enfant avec cette commande\nUtilisez en entr√©e `child.R1.aa.fq.gz` et `child.R2.aa.fq.gz` et redirigez la sortie standard vers un fichier `child_unsorted.aa.sam` (√† l'aide de l'op√©rateur `\u003e`)\n```bash\nbwa mem  -R '@RG\\tID:child-aa\\tSM:child' ref.fa DATA/child.R1.aa.fq.gz DATA/child.R2.aa.fq.gz \u003e child_unsorted.aa.sam\n```\n\n### 6.2. Que renvoie la commande suivante  ?\n```bash\nfile child_unsorted.aa.sam\n```\n\n### 6.3. Combien y-a-t-il de lignes dans ce fichier sam ?\n```bash\nwc -l child_unsorted.aa.sam \n```\n\n\u003c!--\ncut -f1 child_unsorted.aa.sam | sort | uniq -c | sort -nr | head\n      3 HWI-1KL149:97:C6Y6VACXX:5:1215:8773:68642\n      3 HWI-1KL149:97:C6Y6VACXX:4:1306:15197:40857\n\n--\u003e\n\n### 6.4. Combien y-a-t-il de lignes dans l'en-t√™te ?\n```bash\ngrep '^@' child_unsorted.aa.sam | wc -l\n```\n\nEn *regex* le caract√®re `^` signifie *commence par*\n\n### 6.5. Observez les lignes de l'en-t√™te commen√ßant par `@SQ` , y a-t-il une diff√©rence avec le nombre de bases que vous aviez observ√© dans les s√©quences Fasta des chr22 et chrM ?\n\n### 6.6. Retrouvez la ligne `@RG` du 'read-group' dans l'en-t√™te, v√©rifiez que tous les reads dans ce fichier portent une r√©f√©rence √† ce read groupe dans la colonne de m√©tadonn√©es.\n\n### 6.7. Combien y-a-t-il d'alignements ?\n\n### 6.8. Comparez au nombre de reads dans les fichiers `child.R1.aa.fq.gz` et `child.R2.aa.fq.gz`\n\n### 6.9. Identifiez les colonnes d'un fichier SAM:\n\n|#|Colonne|\n|---|---|\n|1 | READ NAME|\n|2 | FLAG|\n|3 | CHROMOSOME|\n|4 | POS|\n|5 | MAPPING QUALITY|\n|6 | CIGAR *(repr√©sentation compacte de l'alignement)*|\n|7 | MATE CHROMOSOME|\n|8 | MATE POS|\n|9 | DISTANCE READ-MATE *(n√©gatif si mate plac√© devant)*|\n|10 | DNA SEQ|\n|11 | QUALITIES|\n\n```bash\ngrep -v '^@' child_unsorted.aa.sam | head -1 | tr \"\\t\" \"\\n\" | cat -n\n```\n\nLa deuxi√®me colonne contient le *SAM FLAG*: des m√©ta-informations sur le mapping des reads. \n\n### 6.10. Quel(s) est(sont) le(s) SAM Flag retrouv√©(s) le plus souvent ?\n\n### 6.11. Cherchez sa(leur) signification(s)\nR√©f√©rez vous √† [http://broadinstitute.github.io/picard/explain-flags.html](http://broadinstitute.github.io/picard/explain-flags.html)\n\n\u003c!--\n83/163\n12484 83 : en pair, la paire est correcte : 1er / reverse\n12484 163 : en pair, la paire est correcte : 2e / forward\n10672 99 : en pair, la paire est correcte : 1er / forward\n10672 147: en pair, la paire est correcte : 2e / reverse\n\n48 97/145 : (99/147) mais la paire N'est PAS correcte\n45 81/161 : (83/163) mais la paire N'est PAS correcte\n22 73/133 : ce read/son mate n'est pas mapp√©\n20 121/181 : ce read/son mate n'est pas mapp√© (les 2 sont en reverse)\n4 69/137 : ce read/son mate n'est pas mapp√© (les 2 sont en foward)\n\n2 2109 : aucun des 2 n'est mapp√©, les 2 sont en reverse | supplementary alignment\n\n1 117/185 : la paire N'est PAS correcte, ce read/son mate n'est pas mapp√©\n1 2131 : 83 | supplementary alignment\n1 2179 : la paire est correcte | supplementary alignment\n1 2209 | supplementary alignment\n\n--\u003e\n\n### 6.12. Prenez les reads suivants et v√©rifiez que vous retrouvez la m√™me s√©quence \u0026 la m√™me qualit√© dans le fichier FASTQ originel\n\n| # | ID | Flag | ??|\n|---|---|---|---|\n| #1326 | `HWI-1KL149:97:C6Y6VACXX:5:1107:14195:70766` | 163 | R2 - Forward |\n| #3533 | `HWI-1KL149:97:C6Y6VACXX:5:2113:7047:14280` | 83 | R1 - Reverse |\n\n\u003e [!info] Pour extraire le read `1440` du BAM et du fastq, il faut taper\n\u003e \n\u003e - Pour voir l'identifiant, la s√©quence et la qualit√©:\n\u003e ```bash\n\u003e grep -v \"^@\" child_unsorted.aa.sam | head -1440 | tail -1 | cut -f1,2,10,11 | tr \"\\t\" \"\\n\"\n\u003e ```\n\u003e - Pour voir la s√©quence original dans les fastq:\n\u003e ```bash\n\u003e # r√©cur√©rer l'identifiant du read, ici\n\u003e # HWI-1KL149:97:C6Y6VACXX:5:1206:9505:92003\n\u003e zcat DATA/child.R1.aa.fq.gz DATA/child.R2.aa.fq.gz | grep -A3 \"HWI-1KL149:97:C6Y6VACXX:5:1206:9505:92003\"\n\u003e \n\u003e # ou directement avec la commande\n\u003e \n\u003e zcat DATA/child.R1.aa.fq.gz DATA/child.R2.aa.fq.gz | grep -A3 `grep -v \"^@\"  child_unsorted.aa.sam | head -1440 | tail -1 | cut -f1`\n\u003e ```\n\n### 6.13. Observez et d√©crivez les CIGAR des reads suivants\n\nPour le fichier `child_unsorted.aa.sam`\n\n\u003e [!info] Adaptez la premi√®re commande de la section pr√©cedante, mais ne r√©cup√©rez que la 6$^e$ colonne. Utilisez les commandes `grep -v \"^@\"`, `head -XXXX`, `tail -1`, `cut -f6`\n\n- #10\n- #6\n- #110\n- #1915\n- #11391\n- #842\n\n| Letter | Description |\n|---|---|\n|M| Alignment **M**atch *(can be a sequence match or mismatch)* |\n|I| **I**nsertion to the reference |\n|D| **D**eletion from the reference |\n|S| **S**oft clipping *(clipped sequences present in SEQ)* |\n|H| **H**ard clipping *(clipped sequences **NOT** present in SEQ)* |\n|\\*| No known bases in the read |\n\n\u003c!-- \nSoft Clipping : Les bases en 5'/3' du Reads ne sont a align√©es, la longueur du read ne change pas\nHard Clipping : Les bases en 5'/3' du Reads sont supprim√©es, la longueur du read est r√©duite\n\n--\u003e\n\n## 7. Conversion de SAM en BAM\nPour permettre aux algorithmes d'aller plus vite, nous utilisons samtools pour convertir le fichier en format *texte*/**SAM** `child.aa.sam` en format *binaire*/**BAM** `child_unsorted.aa.bam`. \nLes fichiers **BAM** sont en fait des fichiers **SAM** compress√©s avec `gzip`. Ainsi, ils prenent 6 $\\times$ mois de place sur les fichiers **BAM**. Leur traitement devrait en revanche √™tre plus long, car ils doivent √™tre d√©compress√©s pour √™tre lu, mais grace √† l'utilisateur d'*index*, l'acc√®s √† des donn√©es pr√©cises √™tre extr√©mement plus rapide.\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools view -bS -o out.bam in.sam\n\u003e ```\n\u003e - Option `-S` : l'entr√©e est du SAM\n\u003e - Option `-b` : la sortie est du binaire (BAM)\n\u003e - Option `-o` : nom du fichier de sortie\n\u003e \n\u003e \u003e [!warning] ne pas taper cette commande :warning: \n\n### 7.1. G√©n√©rez le fichier `child_unsorted.aa.bam`\n```bash\nsamtools view -bS -o child_unsorted.aa.bam child_unsorted.aa.sam\n```\n\n### 7.2. Que renvoie la commande suivante ? \n```bash\nfile child_unsorted.aa.bam\n```\n\n### 7.3. Affichez les options de samtools view\n```bash\nsamtools view\n```\n\n### 7.4. Affichez le corps du BAM\n```bash\nsamtools view child_unsorted.aa.bam | less\n```\n\n### 7.5. Affichez l'en-t√™te du BAM\n```bash\nsamtools view -H child_unsorted.aa.bam\n```\n\n### 7.6. Affichez le bam complet avec\n```bash\nsamtools view -h child_unsorted.aa.bam | less\n```\n\n### 7.7. Comptez les reads qui √©taient √† l'origine dans le fichier `child.R1.aa.fq.gz` (a.k.a *first in pair*)\nAidez-vous de [http://broadinstitute.github.io/picard/explain-flags.html](http://broadinstitute.github.io/picard/explain-flags.html) et de l'option `-f flag` de `samtools view`.\n\n## 8. Tri du BAM sur la position g√©nomique\n\nPour l'instant, les alignements dans le **BAM** sont dans le m√™me ordre que les *reads* dans les **FASTQ**, c'est √† dire qu'ils sont totalement m√©lang√©s.\n\nPour aller plus vite, les algorithmes d√©tectant les mutations (et autres) ont besoin que les reads soient tri√©s en fonction de leurs coordonn√©es g√©nomiques. \n\nPour cela on utilise `samtools sort`\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools sort -o out.bam -T out in-unsorted.bam\n\u003e ```\n\u003e - `-T PREFIX` Write temporary files to `PREFIX.nnnn.bam`\n\u003e - `-o FILE` Write final output to `FILE` rather than *standard output*\n\u003e \n\u003e \u003e [!warning] ne pas taper cette commande :warning: \n\n\n### 8.1. Triez `child_unsorted.aa.bam` pour produire un fichier `child_sorted.aa.bam`\n```bash\nsamtools sort -T tmp -o child_sorted.aa.bam child_unsorted.aa.bam\n```\n\n### 8.2. V√©rifiez que le fichier est tri√©\nLa premi√®re ligne de son en-t√™te qui doit contenir le mot *coordinate*. \n```bash\nsamtools view -H child_sorted.aa.bam \n```\nEn utilisant `samtools view`, en observant la position croissante CHROM/POS des reads dans le fichier **BAM**.\n```bash\nsamtools view  child_sorted.aa.bam | cut -f 3,4 | head -100\n```\n\n## 9. Mapping de la deuxi√®me paire `child.R1.ab.fq.gz` et `child.R2.ab.fq.gz`\n\n### Proc√©dez pour la seconde paire, comme pour la premi√®re\nMappez les fichiers `child.R1.ab.fq.gz` et `child.R2.ab.fq.gz` de mani√®re √† produire un fichier BAM `child_sorted.ab.bam`\n\n\u003e ***NOTE:***  Dans un environnement parall√©lis√© (cluster...), le mapping de `child_sorted.aa.bam` et `child_sorted.ab.bam` pourrait √™tre fait en parall√®le...\n\nAfin de ne pas avoir √† retaper/adapter toutes les commandes, et √©viter les fautes de frappes, un script est disponible. Il g√©n√©rera √©galement toutes les donn√©es pr√©c√©dentes (et les corrigera si n√©cessaire).\n```bash\n/home/tludwig/master2ggb/tp2.step9.sh\n```\n\u003c!--cp -R /home/tludwig/master2ggb/TP2/step9/--\u003e\n\n## 10. Fusion des BAM pour le m√™me √©chantillon.\nMaintenant que nous avons `child_sorted.aa.bam` et `child_sorted.ab.bam`, nous pouvons les fusionner en un seul fichier **BAM** `child.bam` pour cela on utilise la commande `samtools merge`\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools merge -f  out.bam in1.bam in2.bam in3.bam ....\n\u003e ```\n\u003e - option `-f` : *forcer* la cr√©ation du fichier.\n\u003e \n\u003e \u003e [!warning] ne pas taper cette commande :warning: \n\n\n### 10.1. Fusionnez les fichiers\nFusionnez `child_sorted.aa.bam` et `child_sorted.ab.bam` pour produire child.bam.\n\nA l'aide de `samtools view`, v√©rifiez que le fichier est toujours tri√© et que le nombre d'alignements total est conserv√©.\n\n```bash\nsamtools merge -f child.bam child_sorted.aa.bam child_sorted.ab.bam\n```\n\n## 11. Indexation du BAM\nL'indexation consiste √† cr√©er un fichier d'*index* `.bai` √† partir d'un bam tri√©. Cet index fonctionne comme une sorte d'annuaire qui permet d'acc√©der rapidement aux reads mapp√©s dans une r√©gion g√©nomique pr√©cise. Ici on se sert de la commande `samtools index`\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools index in.bam\n\u003e ```\n\u003e \n\u003e \u003e [!warning] ne pas taper cette commande :warning: \n\n### 11.1. Indexez le fichier child.bam\n\n```bash\nfor i in {1..10}; \ndo \n    echo \"J'ai copi√©/coll√© la commande sans r√©flechir au lieu d'adapter le synopsis\" ; \ndone\n```\n\n### 11.2. V√©rifiez le fonctionnement de l'index\nEffectuez des requ√™tes par r√©gion\n```bash\nsamtools view child.bam chr22 | head \nsamtools view child.bam chrM | head \nsamtools view child.bam chr22:18300000-18900000 | head\n```\n\n## 12. Indexation du genome de reference avec samtools\n\u003c!-- skip section --\u003e\n\nSamtools doit pouvoir acc√®der rapidement √† des r√©gions du g√©nome de reference. Pour cela il lui faut pr√©alablement cr√©er un petit fichier d'index pour la s√©quence de reference.\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools faidx reference.fa\n\u003e ```\n\u003e \n\u003e \u003e [!warning] ne pas taper cette commande :warning: \n\n### 12.1. Indexez votre g√©nome de reference.\nLa commande doit g√©n√©rer un fichier `.fai` qui contient les informations n√©cessaires (offset de la s√©quence dans le fichier, taille des lignes,.... ) pour acc√®der √† des sous-s√©quences.\n\n### 12.2. Extrayez la sequence chrM:50-200\n\nUne fois index√©, on peut rapidement obtenir des sous-r√©gions du genome de r√©f√©rence au format fasta.\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools faidx reference.fa chr:start-end\n\u003e ```\n\u003e \n\u003e \u003e [!warning] ne pas taper cette commande :warning: \n\n## 13. Visualisation interactive avec tview\nLa commande `samtools tview` permet de visualiser interactivement les reads dans une r√©gion donn√©e. Il faut que le BAM et la s√©quence de r√©f√©rence soient index√©s.\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n\u003e samtools tview sorted.bam ref.fa\n\u003e ```\n\n### 13.1. Affichez les premiers reads mapp√©s dans `child.bam`\n\nA l'aide de `samtools view`.\nNotez la position g√©nomique du 1$^{er}$ read mapp√©.\n### 13.2. Affichez `child.sam`\n```bash\nsamtools tview child.bam ref.fa\n```\n\n### 13.3. Naviguez dans le fichier\n\nAppuyez sur la touch `g` (pour *go to*) et tapez la position `chr22:22707361` du read identifier pr√©cedemment.\n\nUtilisez les fl√™ches pour naviguer et `?` pour obtenir de l'aide, `Q` pour quitter.\n\nVous pouvez notamment jouer avec les touches `m`,`n`,`b` et `.`\n\n```bash\n22707361  22707371  22707381  22707391  22707401  22707411  \nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nY...........................................................\nT agccacacagcctgattctgactcttgtgtaaaagatcactaaaaaaaatattacctt\nC  GCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nC  gccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatattacctt\nTCA ccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatattacctt\nTCAGCCA   AGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAG  TGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCC GATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCT ATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTG TTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nCCAGCACCTCAGCCTGA TCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGA   TGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACT  TGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCT GTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTT TGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTG CAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAA ATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAG TCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCA TAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCAC AAAAAAAATATTACCTT\nCCAGCACCTCAGCCTGATTCTGACTCTTCTGGCAAAGATCCCT AAAAAAATATTACCTT\nccagcacctcagcctgattctgactcttctggcaaagatccct AAAAAAATATTACCTT\ntcagccacacagcctgattctgactcttgtgtcaaagatcact  AAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTNA AAAAATATTACCTT\nccagcacctcagcctgattctgactcttctggcaaagatccctaa AAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAA AAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAA aaatattacctt\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAA AATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAA  ATTACCTT\nCCAGCACCTCAGCCTGATTCTGACTCTTCTGGCAAAGATCCCTAAAAAA atattacctt\nccagcacctcagcctgattctgactcttctggcaaagatccctaaaaaa  TATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAAT   acctt\ntcagccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatatt CCTT\nCCAGCACCTCAGCCTGATTCTGACTCTTCTGGCAAAGATCCCTAAAAAA  tattacctt\nCCAGCACCTCAGCCTGATTCTGACTCTTCTGGCAAAGATCCCTAAAAAA   ATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACC t\ntcagccacacagcctgattctgactcttg*gtcaaagatcactaaaaaaaatattacct \nCCAGCACCTCAGCCTGATTCTGACTCTTCTGGCAAAGATCCCTAAAAAA    TTACCTT\nCCAGCACCTCAGCCTGATTCTGACTCTTCTGGCAAAGATCCCTAAAAAA    TTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nccagcacctcagcctgattctgactcttctggcaaagatccctaaaaaa      acctt\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\ntcagccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatattacctt\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\ntcagccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatattacctt\ntcagccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatattacctt\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\ntcagccacacagcctgattctgactcttgtgtcaaagatcactaaaaaaaatattacctt\nTCAGCCACACAGCCTGATTCTGACTCTTGTGTCAAAGATCACTAAAAAAAATATTACCTT\n```\n\n## 14. Mapping des fichiers parentaux.\n### 14.1. Refaire tout le TP pour les reads de la m√®re et du p√®re\n\nA partir des fichiers\n\n- `DATA/mother.R1.aa.fq.gz`\n- `DATA/mother.R1.ab.fq.gz`\n- `DATA/mother.R2.aa.fq.gz`\n- `DATA/mother.R2.ab.fq.gz`\n- `DATA/father.R1.aa.fq.gz`\n- `DATA/father.R1.ab.fq.gz`\n- `DATA/father.R2.aa.fq.gz`\n- `DATA/father.R2.ab.fq.gz`\n\nAfin de ne pas avoir √† retaper toutes les commandes, et √©viter les fautes de frappes, un script est disponible. Il g√©n√©rera √©galement toutes les donn√©es pr√©c√©dentes (et les corrigera si n√©cessaire).\n```bash\n/home/tludwig/master2ggb/tp2.step14.sh\n```\n\n## 15. Calling des mutations\nLe calling des mutations se fait √† l'aide de \n\n- `bcftools mpileup` qui va g√©n√©rer les bases trouv√©es √† toutes les positions pour les 3 bams. Cet outil g√©n√©re un fichier *binaire* de variants **BCF**.\n- `bcftools call` va transformer le **BCF** (*binaire*) en format *texte* **VCF** (Variant Call Format).\n\n\n\u003e [!info] ***Synopsis***\n\u003e ```bash\n \u003e bcftools mpileup --fasta-ref ref.fa --output mutations.bcf  file1.bam file2.bam ... fileN.bam \n\u003e bcftools call  --multiallelic-caller --variants-only --output-type z -o result.vcf.gz --format-fields GQ,GP input.bcf\n\u003e ```\n\u003e \n\u003e \u003e [!warning] ne pas taper ces commandes :warning: \n\n## 16. Fichier VCF\n### R√©perez la ligne commen√ßant par `#CHROM`\nC'est l'en-t√™te standard d'un fichier VCF, dont voici les colonnes\n\n|#  | Colonne|\n|---|---|\n|1  | CHROM|\n|2  | POS|\n|3  | ID|\n|4  | REF|\n|5  | ALT|\n|6  | QUAL|\n|7  | FILTER|\n|8  | INFO|\n|9  | FORMAT|\n|10 | child|\n|11 | mother|\n|12 | father|\n\nLe contenu d'un fichier VCF sera √©tudi√© en d√©tail lors de la prochaine s√©ance.\n\n## 17. Recherche du variant causal\n### 17.1. Calling des variants\n```bash\nbcftools mpileup --fasta-ref ref.fa --output mutations.bcf  child.bam father.bam mother.bam\nbcftools call  --multiallelic-caller --variants-only --output-type z -o result.vcf.gz --format-fields GQ,GP mutations.bcf\n```\n\n### 18.1. Combien y a t-il de variants dans le fichier ?\n```bash\nzcat result.vcf.gz | grep -v \"^#\" | wc -l\n```\n\n### 18.2. Extraction des variants *de novo*\nOn regarde quels variants (lignes) sont absents chez les 2 parents (homozygotes √† la r√©f√©rence). Combien y en a t-il ?\n```bash\nzcat result.vcf.gz | awk '($1 ~ \"^#\" || ($11 ~ \"0/0\" \u0026\u0026 $12 ~ \"0/0\")) {print $0;}' \u003e denovo.vcf\n```\n\n### 18.3. Annotation du fichier\n\u003c!--\n:::danger\n:no_entry_sign: ***Indisponible sur la Virtual Box***\n:::\n--\u003e\nL'annotation ajoute un certain nombre d'informations utiles dans le fichier. Le nombre de variants ne change pas, mais chaque ligne est enrichie.\n```bash\nvep denovo.vcf annotated.vcf\n```\n\n### 18.4. Extraction des variants d√©l√©taires\nOn va rechercher, grace aux annotations, les variants ayant un impact fort (***HIGH***) ou mod√©r√© (***MODERATE***) sur la prot√©ine traduite. \n\nCombien y en a t'il ?\n```bash\ncat annotated.vcf | grep -v \"^#\" | grep -E '(HIGH|MODERATE)' \u003e variants.list\n```\n\n### 18.5. Recherche des g√®nes impact√©s\nOn extrait la liste des g√®nes impact√©s. Un m√™me variant peut impacter plusieurs prot√©ines. Il peut √©galement avoir plusieurs impacts sur une m√™me prot√©ine (notamment en impactant diff√©rents transcrits). Combien de g√®nes sont touch√©s ? A quelle famille de g√®nes appartiennent-ils ?\n```bash\ncat variants.list | cut -f8 | tr ';' '\\n' | grep \"^CSQ\" | tr ',' '\\n' | cut -d '|' -f4 | sort -u\n```\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/2022-2023/BioInfo-TP3-Interpr%C3%A9tation-dun-fichier-de-variants-VCF-issu-dune-analyse-NGS":{"title":"BioInfo TP3 - Interpr√©tation d‚Äôun fichier de variants (VCF) issu d‚Äôune analyse NGS","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\n\u003e [!success] **Objectif**: Analyser un fichier de variants (VCF) dans le but d‚Äôidentifier le variant causal d‚Äôune pathologie.\n\u003e *Remarque*: pour simplifier, le fichier VCF est limit√© √† quelques r√©gions seulement.\n\n## Rappel du format VCF\n\n### Colonnes\n\n| CHROM | POS | ID | REF | ALT | QUAL | FILTER | INFO | FORMAT | Samples... |\n|---|---|---|---|---|---|---|---|---|---|\n\n### Num√©ro des All√®les\n- 0 : Allele de Ref√©rence (REF)\n- 1,2,...,n : Alleles alternatifs (ALT$_1$,ALT$_2$,...ALT$_n$)\n\n### G√©notypes\n\n\u003e [!info] *Exemple* : REF = A; ALT = C,G\n\u003e - 0 = A\n\u003e - 1 = C\n\u003e - 2 = G\n\n- 0/0 = A/A\n- 0/1 = A/C\n- 1/1 = C/C\n- 1/2 = C/G\n- ./. ou . = missing\n\n### Phase\n`/` pour un g√©notype non phas√© et `|` pour un g√©notype phas√©.\n- Si un individu poss√®de un variant A/C puis un variant G/T, on sait que l'individu poss√®de un all√®le A et un all√®le C, et plus loin un all√®le G et un all√®le T\n- Si un individu poss√®de un variant A|C puis un variant G|T, on sait que les all√®les A et G sont sur le m√™me chromosome et que C et T sont sur l'autre chromosome. AG et CT forment donc des haplotypes\n\n## 1. Comprendre le format VCF\n\nPour r√©pondre, utilisez les outils unix (`more`, `grep`, `wc`, ...) pour analysez le fichier VCF:\n\nT√©l√©chargez le fichier [http://lysine.univ-brest.fr/~tludwig/master2/tp3/1.variants.vcf](http://lysine.univ-brest.fr/~tludwig/master2/tp3/1.variants.vcf)\n\n### 1.1. Quelle est la version (format) de ce fichier VCF ?\n\n### 1.2. Quelle version de GATK a √©t√© utilis√©e pour identifier les variants ?\n\n### 1.3. Contre quel g√©nome de r√©f√©rence les reads ont-il √©t√© align√©s ?\n\n### 1.4. Que signifient MQ, DP, GT ?\n\n### 1.5. Combien y-a-t'il d'individus (samples) dans ce fichier ?\n\n### 1.6. Combien le fichier compte-t'il de variants ?\n\nC'est √† dire\n- Positions variantes (*facile*)\n- All√®les variants (*plus difficile*)\n- \n### 1.7. Comment distingue-t'on les SNVs, les insertions et les d√©l√©tions ?\n\n### 1.8. Examinez le variant 1:156706559 (rs8658) :\n\n1. Combien y-a-t'il de substitutions, d'insertions et de d√©l√©tions √† cette position ? \n2. Combien d'individus portent des all√©les A, C et G ?\n3. Combien y-a-t'il d'all√®les A, C, G ?\n4. Combien y-a-t'il d'individus au g√©notype homozygote / h√©t√©rozygote ?\n5. Quelle est la qualit√© de g√©notypage de chaque individu √† cette position ?\n\n## 2. UCSC Browser\n\nVisualisez le variant `rs4619` dans le browser UCSC. \n\n[https://genome-euro.ucsc.edu/cgi-bin/hgGateway](https://genome-euro.ucsc.edu/cgi-bin/hgGateway)\n\nChoisir :\n- Human Assembly : Feb. 2009 (GRCh37/hg19)\n- All Short Genetic Variants from dbSNP Release 153\n\n\n### 2.1. Sur quel chromosome et quelle bande se trouve ce variant ?\n### 2.2. Dans quel g√®ne ? \n\nL'info est visible directement, mais ne pas h√©siter √† afficher les donn√©es gencode\nDans `Genes and Gene Predictions`, passez `GENCODE` de `hide` a `show` et cliquez `refresh`\n\n### 2.3. Donnez au moins 1 identifiant ensembl d'un transcrit contenant ce variant ?\n\nDans `Genes and Gene Predictions`, passez `Ensembl Genes` de `hide` a `pack` et cliquez `refresh`\n\n### 2.4. O√π se trouve ce variant\n\n- Chromosome\n- Position\n- Bande\n\n### 2.5. Quel est l'acide amin√© impact√© ? \n\nCliquez sur Zoom In `3x`\n\n### 2.6. Cet acide amin√© est-il tr√®s conserv√© entre l'humain et les autres esp√®ces ?\n\n## 3. Annotation fonctionnelle avec vep\n\nAllez sur l'URL suivante pour effectuer une annotation avec vep (***V**ariant **E**ffect **P**redictor*):\n\n[http://grch37.ensembl.org/Homo_sapiens/Tools/VEP](http://grch37.ensembl.org/Homo_sapiens/Tools/VEP)\n\nRemplissez les champs suivants : \n\n| Cl√© | Valeur |\n|---|---|\n| Species | `Homo_sapiens` |\n| Name for this job | TP3.1_`votre_nom` |\n| Input data, provide file URL | [`http://lysine.univ-brest.fr/~tludwig/master2/tp3/1.variants.vcf`](http://lysine.univ-brest.fr/~tludwig/master2/tp3/1.variants.vcf) |\n| Additional configurations, Filtering options | `Show one selected consequence per variant` |\n\nEn vous basant sur le tableau √† cette URL [https://m.ensembl.org/info/genome/variation/prediction/predicted_data.html](https://m.ensembl.org/info/genome/variation/prediction/predicted_data.html), r√©pondez aux questions suivantes.\n\n![](https://m.ensembl.org/info/genome/variation/prediction/consequences.jpg)\n\nLes 2 premi√®res questions peuvent √™tre trait√©e pendant que le job est `Queued` ou `Running`\n\n### 3.1. Quelles sont les diff√©rentes classes d'*IMPACT* ? A quoi servent-elles ?\n\n### 3.2. A quelle classe appartient l'annotation *missense_variant* ?\n\n### 3.3. Utiliser les filtres pour r√©pondre. \n\nDans votre fichier, combien y-a-t'il  de variants :\n1. synonymous_variant\n2. 3_prime_UTR_variant\n3. frameshift_variant\n\nUtiliser `Filters`, `Consequence`, `is`, `XXXX`\n\n### 3.4. Examinez la *gravit√©* des variants missense au niveau prot√©ique\n\n- Utiliser `Filters`, `Consequence`, `is`, `missense_variant`\n- Cliquez sur `Show/hide columns` et cochez `SIFT`,`PolyPhen` et `AF`\n- Triez les variants en fonction de `AF`\n\n## 4. Fr√©quences all√©liques en population\n\nPour cette partie, remplacez XXXXXX par un variant dans la liste suivante :\n\n|  |  |  |  |\n|---|---|---|---|\n| rs4619 | rs10508 | rs697212 | rs719925 |\n| rs1005974 | rs1661712 | rs1874344 | rs2278959 |\n| rs73571431 | rs75306265 | rs75555675 | rs77914199 |\n| rs144225791 | rs149864119 |  rs762194 | rs7323(  C ) |\n\n### 4.1. Quelle est la fr√©quence dans 1000 genomes de XXXXXX ?\n\n[http://grch37.ensembl.org/Homo_sapiens/Info/Index](http://grch37.ensembl.org/Homo_sapiens/Info/Index)\n\n### 4.2. Quelle est la fr√©quence dans GnomAD genomes de XXXXXX ?\n\n[https://gnomad.broadinstitute.org/](https://gnomad.broadinstitute.org/)\n\n### 4.3. Sur combien d'individus est calcul√©e cette fr√©quence ?\n\n### 4.4. Quelle est la fr√©quence en Europe (hors Finlande), et sur combien d'individus est-elle calcul√©e ?\n\n### 4.5. Quelle sont les fr√©quences dans FrEx des variants rs8658 (C, G) ?\n\n[http://lysine.univ-brest.fr/FrExAC/](http://lysine.univ-brest.fr/FrExAC/)\n\n### 4.6. D√©duisez en la fr√©quence de l'all√®le de r√©f√©rence (A) ?\n\n### 4.7. Ces fr√©quences sont globalement les m√™mes dans 1000 genomes. \n\nQue concluez-vous en examinant les fr√©quences de A, C et G ?\n\n### 4.8. Quelle est (environ) la profondeur de couverture moyenne du variant XXXXXX dans FrEx ?\n\n## 5. Recherche du variant causal\n\nOn a filtr√© pour ne garder que les variants de tr√®s faible fr√©quence dans la population g√©n√©rale, et compatible avec une mutation *de novo*. On a √©galement √©limin√© les variants non-exoniques ou n'ayant pas d'impact sur la prot√©ine. On suppose que la pathologie √©tudi√©e est une s√©v√®re d√©ficience intellectuelle.\n\nAllez sur l'URL suivante pour effectuer une annotation avec vep (***V**ariant **E**ffect **P**redictor*):\n\n[http://grch37.ensembl.org/Homo_sapiens/Tools/VEP](http://grch37.ensembl.org/Homo_sapiens/Tools/VEP)\n\nRemplissez les champs suivants : \n\n| Cl√© | Valeur |\n|---|---|\n| Species | `Homo_sapiens` |\n| Name for this job | TP3.2_`votre_nom` |\n| Input data, provide file URL | [`http://lysine.univ-brest.fr/~tludwig/master2/tp3/2.denovo.vcf`](http://lysine.univ-brest.fr/~tludwig/master2/tp3/2.denovo.vcf) |\n| Variants and frequency data | D√©cochez `1000 Genomes global minor allele frequency` et Cochez `gnomAD (exomes) allele frequencies` |\n| Additional configurations, Filtering options | `Show all results` |\n\nCochez uniquement les colonnes\n- Uploaded Variant\n- Location\n- Allele\n- Consequence\n- Symbol\n- Exon\n- Protein position\n- Amino Acids\n- SIFT\n- PolyPhen\n- gnomAD_AF\n\nEt triez sur la colonne `Location`\n\n### 5.1. Combien y-a-t'il de variants ? \n\nNe r√©pondez pas trop vite :wink: \n\n### 5.2. Combien sont nouveaux  ?\n\nC'est √† dire, inconnu dans ***dbSNP***\n\n### 5.3. Combien y a t-il de variants *missense* ?\n\nUtilisez les filtres, pour ne voir que les variant missense.\n\n### 5.4. Quel variant pouvez vous √©liminer ?\n\nLa pathologie √©tant extr√™mement rare et suppos√©e caus√©e par un unique variant, quel variant pouvez-vous √©liminer imm√©diatement de la liste des candidats ?\n\n### 5.5. Quels sont les 3 variants les plus *graves* ?\n\nEn vous basant sur SIFT/PolyPhen, quels sont les variants ayant un effet grave sur la prot√©ine.\n\n### 5.6. Dans quels g√®nes sont situ√©s ces variants ?\n\n### 5.7. Quel semble √™tre **le** variant causal ? Pourquoi ?\n\nEn regardant rapidement la description des g√®nes impact√©s et les ph√©notypes de la pathologie.\n\n### 5.8. Dans quel exon est situ√© de ce variant ?\n\n### 5.10. Quel est son impact sur la s√©quence prot√©ique ?\n\n### 5.11. Quel est son effet sur la prot√©ine ?\n\nD'apr√®s SIFT et PolyPhen \n\n### 5.12. Quelle est sa position sur la r√©f√©rence GRCh38 ?\n\n- Cliquez sur le lien dans la colonne *Location*\n- Notez bien que la position est padd√©e de 50bp de chaque cot√©e.\n- Cherchez dans le menu de gauche\n\n### 5.13. Quel est le score de conservation GERP √† cette position ? \n\nVoir UCSC\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/2022-2023/BioInfo-TP4-NGS-Data-Processing":{"title":"BioInfo TP4 - NGS Data Processing","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n## Part 1: NGS Workflow\n\n\u003e [!success] ***Objective*** :bookmark_tabs:\n\u003e Identification of candidate variants involved in a pathology in the simple case of a mendelian disease.\n\n\u003e [!warning] ***Disclaimer*** :warning:\n\u003e - Only Human Data will be addressed\n\u003e - Focus on constitutional (germline) variations\n\u003e - No time for in-depth analysis of every aspect of the workflow\n\u003e - *\"Damn it, Jim ! I'm a Computer-Scientist, not a Biologist !\"*\n\n### 1.1. What do we want ?\n\n- We have DNA from several individuals. Some are cases and some are controls (in regard of a given pathology).\n- We want to identify **THE** genetic variant that is associated to the observed phenotype.\n- We look at every variants in all the individuals and try to find some candidates that match the supposed transmission pattern (dominant, recessive, *de novo*...)\n\n### 1.2. How to process data from the sequencer ?\n\n- Trying to put every pieces of the text in its proper location: **alignment** against a \"*reference genome*\".\n- Identifying the differences between the reconstructed text and the reference (biological variants, sequencing errors, alignment errors): **variant calling**.\n\n### 1.3. What is a variant ?\n\n\u003e ***Small sized variations***\n\u003e - **SNV**: **S**ingle **N**ucleotide **V**ariant (abusively simplified as **SNP**)\n\u003e example : AGT\u003cspan style=\"color:green;font-weight:bold\"\u003eG\u003c/span\u003eTGC‚ÜíAGT\u003cspan style=\"color:red;font-weight:bold\"\u003eA\u003c/span\u003eTGC\n\u003e - Short **indel**: **in**sertion or **del**eltion\n\u003e insertion : AGTGTGC‚ÜíAGTG\u003cspan style=\"color:red;font-weight:bold\"\u003eACGC\u003c/span\u003eTGC\n\u003e deletion : AGT\u003cspan style=\"color:green;font-weight:bold\"\u003eGTG\u003c/span\u003eC‚ÜíAGTC\n\n\u003e ![](http://lysine.univ-brest.fr/~tludwig/oldstructuralvariantstlu.png)\n\u003e *length $\\ge$ 1kb*\n\n### 1.4. Classic NGS Workflow :wrench:\n\n![](http://lysine.univ-brest.fr/~tludwig/NGSWorkFlow.png)\n\n### 1.5. The Fastq file format\n\n#### Example\n```\n@HWI-1KL149:109:C8D6YACXX:1:1101:1076:64252/1\nCAGACTGCTTGTGTCCATGTCGTCCTCAGAGCCTAGTCCATGATGGCACAGTACTAGATCCACCAAGTCTTCTTTC\n+\nB@CFFFFFHHHHHHJJGIJJJJIJJJJJJEHIJJJJJJJJJIHJJIIFHGIHIIJIIIJJJJJIIGIJJEHJJJHH\n@HWI-1KL149:109:C8D6YACXX:1:1101:1093:50109/1\nGAGTCAAATAATCTTTAAGTGATGACAGAAAGTGAATCTTTTTCACTAAAACAAAACCTATCTGTGATACAAATGC\n+\n@CCDFFDFHHGHHJJJJJJJJIJJJJJJJIJJEHGIJJIJJJJJJJJJJIIIJBFGIJJIJIJJIJJJJJIAGIJG\n```\n\n#### Quality Score\n\n- ASCII code from 33 `!` to 126 `~`: 93 scores available\n- Score = Phred$_{+33}$\n- $Q = -log_{10}(P) \\Leftrightarrow P = 10^{\\frac{-Q}{10}}$\n- Probability of incorrect identification $Q_{10} \\rightarrow P=\\frac{1}{10}$, $Q_{20} \\rightarrow P=\\frac{1}{100}$, $Q_{30} \\rightarrow P=\\frac{1}{1000}$,...\n- Example: `J` $\\rightarrow$ code ASCII `74` $\\rightarrow Q=74-33=41 \\rightarrow P=10^{-4.1} = 7,9433e^{-5} = \\frac{1}{12589}$ \n\n### 1.6. QC on fastq files, with *FastQC*\n\nQuality Control of the `fastq` files produced by the sequencer\n- Quality preservation along the Reads\n- Overall Quality of each Read\n- GC% offset and base repartition might indicate contamination\n\n\u003e [!info] ***Initialize Project***\n\u003e ```bash\n\u003e cd ; \n\u003e cp -R /home/tludwig/master2ggb/tp4 .;\n\u003e cd tp4;\n\u003e ```\n\n\u003e [!info] ***Check fastq file with fastqc***\n\u003e ```bash\n\u003e fastqc\n\u003e ```\n\u003e File, Open :  data / father.R1.L001.fastq.gz\n\n#### Good Per Base Quality\n\n![](http://lysine.univ-brest.fr/~tludwig/good_per_base_quality.png)\n\n#### Bad Per Base Quality\n\n![](http://lysine.univ-brest.fr/~tludwig/bad_per_base_quality.png)\n\n#### Good Per Sequence Quality\n\n![](http://lysine.univ-brest.fr/~tludwig/good_per_sequence_quality.png)\n\n#### Bad Per Sequence Quality\n\n![](http://lysine.univ-brest.fr/~tludwig/bad_per_sequence_quality.png)\n\n### 1.7. Alignment\n\nMap each read to a reference genome\n\n#### Several Algorithms available\n\n| Aglorithm | Sensitivity \u003c100bp | Sensitivity \u003e100bp | Specificity \u003c100bp | Specificity \u003e100bp | Speed \u003c100bp | Speed \u003e100bp  | Tandem Low | Tandem High |\n|---|---|---|---|---|---|---|---|---|\n|BWA | :star: | :star::star::star: | :star::star: | :star::star::star: | :star::star::star: | :star::star::star: | :star::star: | :star: |\n|Bowtie2 | :star: | :star::star::star: | :star: | :star: | :star::star: | :star::star: | :star::star: | :star: |\n|NovoAlign | :star::star::star: | :star::star::star: | :star::star: | :star::star::star: | :star: | :star: | :star::star: | :star: |\n|Smalt | :star: | :star::star::star: | :star: | :star: | :star::star: | :star::star: | :star::star: | :star: |\n|Stampy | :star::star: | :star::star::star: | :star::star: | :star::star::star: | :star: | :star: | :star::star: | :star: |\n\nAn alignment *aligns* reads from a `fastq` file to a reference genome (`fasta` file) and produces a `SAM`/`BAM`/`CRAM` file\n\n\u003e [!info] ***align fastq files in sam files***\n\u003e `./script1.sh` \n\u003e ```bash\n\u003e #!/bin/bash\n\u003e for lane in L001 L002 L003; do\n\u003e     echo \"Aligning from father lane : $lane\";\n\u003e     bwa mem -M ~/tp4/resources/reference.b37.fasta \\\n\u003e     ~/tp4/data/father.R1.$lane.fastq.gz \\\n\u003e     ~/tp4/data/father.R2.$lane.fastq.gz \\\n\u003e    \u003e ~/tp4/results/father.$lane.sam ;\ndone\n\u003e ```\n\n#### A view from *IGV*\n\n![](http://lysine.univ-brest.fr/~tludwig/igv.png)\n\n#### **SAM** (**S**equence **A**lignment **M**ap) file format\n\n| #   | Name  | Type   | Description                       |\n|-----|-------|--------|-----------------------------------|\n| 1   | NAME  | String | NAME                              |\n| 2   | FLAG  | Int    | bitwise FLAG                      |\n| 3   | RNAME | String | Reference sequence NAME  (chr)    |\n| 4   | POS   | Int    | 1-based leftmost mapping POSition |\n| 5   | MAPQ  | Int    | MAPping Quality                   |\n| 6   | CIGAR | String | CIGAR string                      |\n| 7   | RNEXT | String | Ref. name of the mate read (chr)  |\n| 8   | PNEXT | Int    | Position of the mate read         |\n| 9   | TLEN  | Int    | observed Template LENgth          |\n| 10  | SEQ   | String | segment SEQuence                  |\n| 11  | QUAL  | String | ASCII base QUALity                |\n| 12+ | PGM   | String | Program Annotations               |\n\n#### Compressed formats for SAM files\n\n`SAM` files are very **BIG**, so there are 2 binary formats that intend to reduce this size:\n- **BAM** $\\frac{size}{4}$: gzipped version of the **SAM**, most used format\n- **CRAM** $\\frac{size}{7}$: increasingly used format. The reference genome `fasta` file is needed to read back the `CRAM` file\n\n### 1.8. Processing BAM files\n\n#### Merging\n\nFor example, when there is one file per lane and you want one file per sample\n\n\u003e [!info] ***merge multiple sam files into an unique bam file***\n\u003e `./script2.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e picard-tools MergeSamFiles \\\n\u003e     I=~/tp4/results/father.L001.sam \\\n\u003e     I=~/tp4/results/father.L002.sam \\\n\u003e     I=~/tp4/results/father.L003.sam \\\n\u003e     O=~/tp4/results/father.bam \\\n\u003e     SO=unsorted \\\n\u003e     USE_THREADING=true ;\n\u003e ```\n\n#### Sorting \n\nThe **reads** are ordered by coordinates. This allows for quick search and extraction.\n\n\u003e [!info] ***sort bam file (with picard or sambamba)***\n\u003e `./script3.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e sambamba sort ~/tp4/results/father.bam -o ~/tp4/results/father.sorted.bam;\n\u003e ```\n\n#### Marking Duplicates\n\nPoints out PCR artefacts.\n\nOtherwise, one given read could falsely be present several hundreds times, and completly alter the subsequent variant calling.\n\n\u003e [!warning] Avoid this step in the case of amplicons.\n\n\u003e [!info] ***mark duplicates in bam file (with picard or sambamba)***\n\u003e `./script4.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e sambamba markdup ~/tp4/results/father.sorted.bam  ~/tp4/results/father.dedup.bam ;\n\u003e ```\n\n#### Set Read Groups\n\nA read group refers to a set of reads that are generated from a single run of a sequencer. \n\nIn the simple case where a single library preparation derived from a single biological sample was run on a single lane of a flow cell, all the reads from that lane run belong to the same read group. When multiplexing is involved, then each subset of reads originating from a separate library run on that lane will constitute a separate read group.\n\nRead groups have various properties:\n- **ID**: Read group **Id**entifier\n- **PU**: **P**latform **U**nit\n- **SM**: **S**a**m**ple\n- **PL**: **Pl**atform/technology used to produce the read\n- **LB**: DNA preparation **l**i**b**rary identifier\n\n\u003e [!info] ***create read groups***\n\u003e `./script5.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e picard-tools AddOrReplaceReadGroups \\\n\u003e     I=~/tp4/results/father.dedup.bam \\\n\u003e     O=~/tp4/results/father.withRG.bam \\\n\u003e     RGLB=lib1234 \\\n\u003e     RGPL=ILLUMINA \\\n\u003e     RGPU=Unit17 \\\n\u003e     RGSM=FAM001FATHER \\\n\u003e     RGCN=SeqCenter ;\n\u003e ```\n\n#### Indel Local Realignment\n\nImproves Indel quality in subsequent variant calling (useful for legacy callers such as *UnifiedGenotyper* and *MuTect*, Redundant with new callers like *HaplotypeCaller* or *MuTect2*).\n\n\u003e [!info] ***index bam file (with picard or sambamba)***\n\u003e `./script6.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e sambamba index ~/tp4/results/father.withRG.bam ;\n\u003e ```\n\n\u003e [!info] ***realign indels***\n\u003e `./script7.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e GATK -T IndelRealigner \\\n\u003e     -I ~/tp4/results/father.withRG.bam \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -targetIntervals 12 \\\n\u003e     -known ~/tp4/resources/Mills_and_1000G_gold_standard.indels.b37.vcf.gz \\\n\u003e     -known ~/tp4/resources/1000G_phase1.indels.b37.vcf.gz \\\n\u003e     -o ~/tp4/results/father.real.bam ;\n\u003e ```\n\n#### Base quality score recalibration\n\nAdjusts systematic techinical error regarding base call quality, using machine learning to model errors empirically.\n\n\u003e [!info] ***tabulate data for recalibration***\n\u003e `./script8.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e GATK -T BaseRecalibrator \\\n\u003e     -I ~/tp4/results/father.real.bam \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -knownSites ~/tp4/resources/dbSNP.150.b37.vcf.gz \\\n\u003e     -knownSites ~/tp4/resources/Mills_and_1000G_gold_standard.indels.b37.vcf.gz \\\n\u003e     -knownSites ~/tp4/resources/1000G_phase1.indels.b37.vcf.gz \\\n\u003e     -o ~/tp4/results/father.table ;\n\u003e ```\n\n\u003e [!info] ***recalibrate bam file***\n\u003e `./script9.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e GATK -T PrintReads \\\n\u003e     -I ~/tp4/results/father.real.bam \\\n\u003e     -BQSR ~/tp4/results/father.table \\\n\u003e     -o ~/tp4/results/father.bqsr.bam \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta ;\n\u003e ```\n\n\u003e [!info] ***Look at the alignment***\n\u003e ```bash\n\u003e igv results/father.bqsr.bam 12:497992\n\u003e ```\n\n### 1.9. Calling Variants\n\nUse the information in the alignment to infer the genotype of the individual at each genomic position\n\n#### Several Algorithms\n\n| Algorithm | **TP** | **FP** |\n|---|---|---|\n| **HaplotypeCaller** | 21,707 | 367    |\n| FreeBayes           | 23,857 | 18,256 |\n| SAMtools Mpileup    | 25,081 | 2,129  |\n| SNPSVM              | 17,920 | 65     |\n\n#### Algorithms for Somatic Variants\n\n- MuTect2\n- Strelka\n- EBCall\n- Seurat\n- VarScan2\n\n#### The VCF (and gVCF) file format\n\n![](http://lysine.univ-brest.fr/~tludwig/vcf_format.png)\n\n![](http://lysine.univ-brest.fr/~tludwig/VCFexplained.png)\n\n#### VCF vs. gVCF file formats\n\n- `VCF` files provide information only for sites where at least one sample has a variant allele\n- `gVCF` files (as produced by *HaplotypeCaller*) provide a genotype for each position and not just variant positions. This is useful to differentiate missing calls from position homozygous to the reference genome.\n\n\u003e [!info] ***call variant of the bam alignment into a gVCF file***\n\u003e `./script10.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e GATK -T HaplotypeCaller \\\n\u003e     -I ~/tp4/results/father.bqsr.bam \\\n\u003e     -o ~/tp4/results/father.gvcf.gz \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -L ~/tp4/resources/capture.kit.bed \\\n\u003e     --interval_padding 100 \\\n\u003e     --emitRefConfidence BP_RESOLUTION \\\n\u003e     --variant_index_type LINEAR \\\n\u003e     --variant_index_parameter 128000 \\\n\u003e     -gt_mode DISCOVERY \\\n\u003e     --dbsnp ~/tp4/resources/dbSNP.150.b37.vcf.gz ;\n\u003e # other options\n\u003e #    -nct 8 # for multithreading\n\u003e #    --dontUseSoftClippedBases # mostly for clinical data, if no further QC are done\n\u003e ```\n\n#### Combining gVCF files \n\n- `gVCF` files produced by *HaplotypeCaller* contain a single sample\n- The actual genotyping (next step) will need to look simultaneously at the genotype of each sample\n- If a large (200+) amount of samples is present, this can be demanding (as the machine needs to keep a great number of very large files open at the same time)\n- Combining several mono-sample `gVCF` files into fewer multi-sample files can greatly speed-up the genotyping and be less resource demanding.\n\n![](http://lysine.univ-brest.fr/~tludwig/gvcfscombine.png)\n\n\u003e [!info] ***combine multiple mono-sample gvcf files into a unique multi-sample gvcf file***\n\u003e `./script11.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e for fam in fam1 fam2 fam3;\n\u003e do\n\u003e     GATK -T CombineGVCFs \\\n\u003e         -o ~/tp4/results/${fam}.gvcf.gz \\\n\u003e         -R ~/tp4/resources/reference.b37.fasta \\\n\u003e         -V ~/tp4/data/${fam}-E.gvcf.gz \\\n\u003e         -V ~/tp4/data/${fam}-M.gvcf.gz \\\n\u003e         -V ~/tp4/data/${fam}-P.gvcf.gz ;\n\u003e done\n\u003e```\n\n#### Genotyping gVCF files\n\n- This step looks at the genotype of each sample at each position\n- It produces biallelic or multiallelic variants and affects genotypes to each sample\n- Only variant sites are kept\n- Several information (statistics, local frequencies, quality, etc.) are also provided.\n\n\u003e [!info] ***genotype multiple gVCF file into a VCF file***\n\u003e `./script12.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e GATK -T GenotypeGVCFs \\\n\u003e     -o ~/tp4/results/genotyped.vcf.gz \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -V ~/tp4/results/fam1.gvcf.gz \\\n\u003e     -V ~/tp4/results/fam2.gvcf.gz \\\n\u003e     -V ~/tp4/results/fam3.gvcf.gz ;\n\u003e ```\n\n### 1.10. Recalibrating Variant Quality Scores\n\n- Calculates a new quality score called **VQSLOD** (**V**ariant **Q**uality**S**core **L**og-**Od**ds)\n- Allowing to finely balance sensitivity (less FNs) and specificity(less FPs)\n- Uses Machine Learning to affect a score based on various contextual information\n- Trains on highly validated variant data (omni, 1000g, hapmap)\n- :warning: Large amount of data is needed to perform this step! At least exome wide and with as many samples as possible\n- The user defines a set of quality tranches, containing a certain amount of True/False Positives\n- Later, these tranches will be used to filter out data, depending on the needs.\n\n![](http://lysine.univ-brest.fr/~tludwig/vqsr.png)\n\n \u003e [!warning] given as an example, won't work on such a small dataset       :warning: \n\n\u003e [!info] ***recalibrate variant quality scores***\n\u003e `./script13.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e # Step1 Compute Recalibration for SNPs\n\u003e GATK -T VariantRecalibrator \\\n\u003e     -mode SNP \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -input ~/tp4/results/genotyped.vcf.gz \\\n\u003e     -resource:hapmap,known=false,training=true,truth=true,prior=15.0 \\\n\u003e     ~/tp4/resources/hapmap_3.3.b37.vcf.gz \\\n\u003e     -resource:omni,known=false,training=true,truth=true,prior=12.0 \\\n\u003e     ~/tp4/resources/1000G_omni2.5.b37.vcf.gz \\\n\u003e     -resource:1000G,known=false,training=true,truth=false,prior=10.0 \\\n\u003e     ~/tp4/resources/1000G_phase1.snps.high_confidence.b37.vcf.gz \\\n\u003e     -resource:dbsnp,known=true,training=false,truth=false,prior=2.0 \\\n\u003e     ~/tp4/resources/dbSNP.150.b37.vcf.gz \\\n\u003e     -an DP -an QD -an FS -an SOR -an MQ -an MQRankSum -an ReadPosRankSum \\\n\u003e     -tranche 100.0 \\\n\u003e     -tranche 99.9 \\\n\u003e     -tranche 99.0 \\\n\u003e     -tranche 90.0 \\\n\u003e     -recalFile ~/tp4/results/snp.recalFile \\\n\u003e     -tranchesFile ~/tp4/results/snp.tranchesFile \\\n \u003e    -rscriptFile ~/tp4/results/out.SNP.R ;\n\u003e  \n\u003e # Step2 Apply Recalibration for SNPs\n\u003e GATK -T ApplyRecalibration \\\n\u003e     -mode SNP \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -input ~/tp4/results/genotyped.vcf.gz \\\n\u003e     -o ~/tp4/results/recal.SNP.vcf.gz \\\n\u003e     -recalFile ~/tp4/results/snp.recalFile \\\n\u003e     -tranchesFile ~/tp4/results/snp.tranchesFile \\\n\u003e     --ts_filter_level 90 ;\n\u003e     \n\u003e # Step3 Compute Recalibration for INDELs\n\u003e GATK -T VariantRecalibrator \\\n\u003e     -mode INDEL \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -input ~/tp4/results/genotyped.vcf.gz \\\n\u003e     -resource:mills,known=true,training=true,truth=true,prior=12.0 \\\n\u003e     ~/tp4/resources/Mills_and_1000G_gold_standard.indels.b37.vcf.gz \\\n\u003e     -an DP -an QD -an FS -an SOR -an MQRankSum -an ReadPosRankSum \\\n\u003e     -tranche 100.0 \\\n\u003e     -tranche 99.9 \\\n\u003e     -tranche 99.0 \\\n\u003e     -tranche 90.0 \\\n\u003e     --maxGaussians 4 \\\n\u003e     -recalFile ~/tp4/results/indel.recalFile \\\n\u003e     -tranchesFile ~/tp4/results/indel.tranchesFile \\\n\u003e     -rscriptFile ~/tp4/results/out.INDEL.R ;\n\u003e     \n\u003e # Step4 Apply Recalibration for INDELs\n\u003e GATK -T ApplyRecalibration \\\n\u003e     -mode INDEL \\\n\u003e     -R ~/tp4/resources/reference.b37.fasta \\\n\u003e     -input ~/tp4/results/genotyped.vcf.gz \\\n\u003e     -o ~/tp4/results/recal.INDEL.vcf.gz \\\n\u003e     -recalFile ~/tp4/results/indel.recalFile \\\n\u003e     -tranchesFile ~/tp4/results/indel.tranchesFile \\\n \u003e    --ts_filter_level ;\n\u003e ```\n\n\u003e [!warning] won't work as the `script13` was not executed :warning: \n\n\u003e [!info] ***merge snp and indel recalibrated files***\n\u003e `./script14.sh`\n\u003e ```bash\n\u003e #!/bin/bash\n\u003e dir=\"~/tp4/results\";\n\u003e snp=\"$dir/recal.SNP.vcf.gz\";\n\u003e indel=\"$dir/recal.INDEL.vcf.gz\";\n\u003e outsnp=\"$dir/VQSR.SNP.vcf.gz\";\n\u003e outindel=\"$dir/VQSR.INDEL.vcf.gz\";\n\u003e output=\"$dir/VQSR.vcf\";\n\u003e \n\u003e # extract SNP\n \u003eecho \"Extract SNP to $outsnp\";\n\u003e zcat $snp | awk ‚Äô{if(($1 ~ \"^#\") || ($7 != \".\")) print $0;}‚Äô | bgzip \u003e \u003e $outsnp;\n\u003e tabix $outsnp;\n\u003e \n\u003e # extract INDEL\n\u003e echo \"Extract INDEL to $outindel\";\n\u003e zcat $indel | awk ‚Äô{if(($1 ~ \"^#\") || ($7 != \".\")) print $0;}‚Äô | bgzip \u003e \u003e $outindel;\n\u003e tabix $outindel;\n\u003e \n\u003e # merge SNP+INDEL\n\u003e echo \"Merge to $output\";\n\u003e head -2000 $outsnp  | grep \"^#\" | cat -n \u003e head.snp\n\u003e head -2000 $outindel | grep \"^#\" | cat -n \u003e head.indel\n\u003e cat head.snp head.indel | sort -n | uniq | cut -f2- \u003e $output\n\u003e rm head.snp head.indel\n\u003e cat $outsnp $outindel | grep -v \"^#\" | sort -V \u003e\u003e $output;\n\u003e echo \"bgzip $output\";\n\u003e bgzip $output;\n\u003e echo \"Tabix\";\n\u003e tabix $output.gz;\n\u003e ```\n\n### 1.11. Variant Annotation\n\nAdding information from external sources:\n- Genes/Transcripts Impacted\n- Consequences\n- Phenotypical Information\n- Validation\n- Frequencies from different populations\n\nSeveral Annotation Softwares:\n- [ANNOVAR](https://annovar.openbioinformatics.org/en/latest/)\n- [snpEff](http://pcingola.github.io/SnpEff/)\n- [vep (Variant Effect Predictor)](https://www.ensembl.org/info/docs/tools/vep/index.html)\n- [VarAFT](https://varaft.eu/) (INSERM U1251)\n\n### 1.13. Regions\n\nSometimes we want to work on a subset of variants, defined by regions. Those regions can for example match a gene/set of genes or the positions taken into account by the capture kit.\n\nThe prevaling format to define regions is the ***BED*** (**B**rowser **E**xtensible **D**ata) file format. It a tabulated file, with the following columns:\n\n|#| Name | Description|\n|---|---|---|\n| 1 | chrom      | Chromosome (e.g. chr3, chrY, chr2_random) or scaffold (e.g. scaffold10671) name |\n| 2 | chromStart | Start coordinate on the chromosome or scaffold for the sequence considered. In base$_0$ |\n| 3 | chromEnd   | End coordinate on the chromosome or scaffold for the sequence considered. In base$_1$ |\n\n\u003e [!info] - base$_0$ means that the first nulceotide of the the chromosome is 0\n\u003e - base$_1$ means that the first nulceotide of the the chromosome is 1 (can also be view as base$_0$ excluded : `[start;end[`)\n\u003e \n\u003e VCF File are numbered in base$_1$, so if you want the chromosome 2 on position 11,12,13,14 et 15 you don't write `chr2 11 15` but `chr2 10 15` and for just the position 17, you write `chr 16 17`\n\n### 1.12. Searching for Candidate Variants\n\nThe variant filtering, selection and priorization is based on several criteria:\n- Variant Type (SNV, INDEL, SV)\n- Consequence on the transcript/protein\n- Frequency\n- Genotypes and transmission pattern\n- Affected Gene/Pathway \n\n---\n\n## Part 2: Identifying Candidate Variants\n\n\u003e [!success] ***Medical Information***\n\u003e - Suspected recessive disease\n\u003e - Thickened, misshaped fingernails and toenails\n\u003e - Palmar keratoderma\n\u003e - Oral leukokeratosis\n\u003e - Cysts, including steatocystoma multiplex\n\u003e - Follicular hyperkeratosis\n\u003e - Blisters\n\u003e - Excessive sweating of the palms and soles\n\n### 2.1. Annotation with variant effect predictor\n\nType this command\n\u003c!--`vep ~/tp4/data/family.vcf.gz ~/tp4/results/family.annotated.vcf`--\u003e\n`cp ~/tp4/data/family.annotated.vcf  ~/tp4/results/family.annotated.vcf`\n\nDetails: \n```bash\n#! /bin/sh\ninvcf=$1;\noutvcf=$2;\nvep=/PROGS/EXTERN/EnsEMBL/latest/vep\nVEP_CACHE_PATH=/PUBLIC_DATA/Annotation/VEP/VEP_CACHE.latest\ncache=\"--cache --merged --offline --dir $VEP_CACHE_PATH\"\nspeed=\"--fork 24 --buffer_size 25000\"\nspecies=\"homo_sapiens\"\nassembly=\"GRCh37\"\nfasta=\"$VEP_CACHE_PATH/$species/91_$assembly/fasta.fa.gz\"\nannotations=\"\"\nannotations=\"$annotations --use_given_ref\"\nannotations=\"$annotations  --check_existing\"\nannotations=\"$annotations --allele_number\"\nannotations=\"$annotations --canonical\"\nannotations=\"$annotations --biotype\"\nannotations=\"$annotations --symbol\"\nannotations=\"$annotations --numbers\"\nannotations=\"$annotations --domains\"\nannotations=\"$annotations --sift b\"\nannotations=\"$annotations --polyphen b\"\nannotations=\"$annotations --regulatory\"\nannotations=\"$annotations --gene_phenotype\"\nannotations=\"$annotations --af\"\nannotations=\"$annotations --max_af\"\nannotations=\"$annotations --af_1kg\"\nannotations=\"$annotations --af_esp\"\nannotations=\"$annotations --af_gnomad\"\nannotations=\"$annotations --hgvs --hgvsg --fasta $fasta\"\nannotations=\"$annotations --plugin dbNSFP,/PUBLIC_DATA/Annotation/dbNSFP/2.9/dbNSFP.gz,LRT_score,GERP++_RS\"  #GRCh37\nannotations=\"$annotations --plugin CADD,/PUBLIC_DATA/Annotation/CADD/CADD_v1.3/whole_genome_SNVs.tsv.gz\"\nannotations=\"$annotations --plugin LoFtool,/PUBLIC_DATA/Annotation/VEP/VEP_CACHE.latest/Plugins/LoFtool_scores.txt\"\noptions=\"$cache $speed --species $species --assembly $assembly $annotations --vcf\"\ncommand=\"$vep $options -i $invcf -o $outvcf\"\necho \"Running: $command\"\n$command\n```\n\n### 2.2. Filtering with VCFProcessor\n\nDocumentation : [http://lysine.univ-brest.fr/vcfprocessor/](http://lysine.univ-brest.fr/vcfprocessor/)\n\nGet VCFProcessor\n```bash\ngit clone https://github.com/ThomasLudwig/VCFProcessor/\ncd VCFProcessor/\nchmod +x gradlew\n./gradlew Deploy\ncd ..\nln -s VCFProcessor/build/libs/VCFProcessor.jar\n```\n\nKeep only variants compatible with a recessive transmission pattern\n```bash\njava -jar VCFProcessor.jar Recessive \\\n    --vcf ~/tp4/results/family.annotated.vcf \\\n    --ped ~/tp4/data/family.ped \\\n    --missing false \\\n    --nohomo true \\\n    --mode strict \\\n    --out ~/tp4/results/recessive.vcf\n```\n\nKeep only rare variants \n```bash\njava -jar VCFProcessor.jar FilterGnomADFrequency \\\n    --vcf ~/tp4/results/recessive.vcf \\\n    --threshold 0.05 \\\n    --out ~/tp4/results/0.05.recessive.vcf\n```\n\nKeep only variants that strongly affect the protein\n```bash\njava -jar VCFProcessor.jar FilterConsequenceLevel \\\n    --vcf ~/tp4/results/0.05.recessive.vcf \\\n    --csq splice_region_variant \\\n    --out ~/tp4/results/effect.0.05.recessive.vcf\n```\n\n### 2.3. Results\n\nThe last command shows a list of genes.\n```bash\njava -jar VCFProcessor.jar GeneList \\\n    --vcf ~/tp4/results/effect.0.05.recessive.vcf \\\n    --out ~/tp4/results/effect.0.05.recessive.gene.list\n```\n\nWhich gene (and thus variant) seems to be the best candidate to explain the patient's phenotype ?","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/BioInfo-Exercices-Bash":{"title":"BioInfo - Exercices Bash","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\nPreparation\n```bash\ncd\ncp /home/tludwig/s.omalleysbar.txt .\n```\n\n### A. Get the first word from each line (easy)\nscp \nuse `cut`\n\n```bash\ncat s.omalleysbar.txt | ... | head -30\n```\n\n:::spoiler Solution\n- use `cut -d' '` and keep first field\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | cut -d' ' -f1 | head -30\n```\n:::\n\n### B. Sort first word from each line by number of occurences (medium)\n\nuse `cut`, `sort`, `uniq`\n\n```bash\ncat s.omalleysbar.txt | ... | head -20\n```\n\n:::spoiler Solution\n- get first word\n- sort\n- count uniq occurences\n- sort numerically\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | cut -d' ' -f1 | sort | uniq -c | sort -n | tail -30\n```\n:::\n\n### C. Get the last word from each line (hard)\n\nuse `cut`, `rev`\n\n```bash\ncat s.omalleysbar.txt | ... | head -20\n```\n\n:::spoiler Solution\n- reverse the whole line\n- get the first word of the reversed line\n- reverse this word\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | rev | cut -d' ' -f1 | rev | head -30\n```\n:::\n\n### D. Get all the line containing \"as\" (easy)\n\nuse `grep -w`\n\n```bash\ncat s.omalleysbar.txt | ... \n```\n\n:::spoiler Solution\n- use `grep -w \"as\"`\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | grep -w \"as\" | head -30\n```\n:::\n\n### E. Get the number of occurences of \"as\" (medium)\n\nuse `grep`, `wc`\n\n```bash\ncat s.omalleysbar.txt | ... \n```\n\n:::spoiler Solution\n- use `grep -o`\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | grep -o -w \"as\" | wc -l\n```\n:::\n\n### F. Sort all words alphabetically (medium)\n\nuse `tr`, `sort`\n```\ncat s.omalleysbar.txt | tr '[:upper:]' '[:lower:]' | ... | head -30\n```\n\n:::spoiler Solution\n- put one word per line\n- sort them\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | tr '[:upper:]' '[:lower:]' | tr \" \" \"\\n\"| sort -u | head -30\n```\n:::\n\n### G. Sort all words by number of occurences (medium-hard)\n\nuse `tr`, `sort`, `uniq`\n\n```bash\ncat s.omalleysbar.txt | tr '[:upper:]' '[:lower:]' | ... | head -30\n```\n\n:::spoiler Solution\n- put one word per line\n- sort them\n- count unique occurences\n- sort numerically\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | tr '[:upper:]' '[:lower:]' | tr \" \" \"\\n\"| sort | uniq -c | sort -n | tail -30\n```\n:::\n\n### H. Get all lines with more than 45 characters (hard)\n\nuse `cut`, `diff`, `grep`\n\n```bash\ncat s.omalleysbar.txt | ... \n...\n```\n\n:::spoiler Solution\n- cut lines after the 45^th^ character\n- store the result in a file\n- get the difference between this file and the original\n:::spoiler Code\n```bash\ncat s.omalleysbar.txt | cut -c-45 \u003e max45\ndiff s.omalleysbar.txt max45 | grep \"^\u003c\" | cut -c3-\n```\n:::\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/BioInfo-Introduction-%C3%A0-Python":{"title":"BioInfo - Introduction √† Python","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\n## Python\n\nPython est un langage qui peut √™tre\n- Interpr√©t√© (on tape une commande et elle est imm√©diatement execut√©). Pour cela il suffit de rentrer dans l'interpr√©teur python, en tapant `python3` (ctrl+D pour quitter)\n- scripts. On ecrit dans un fichier une liste de commandes qui seront execut√©es s√©quentiellement. Pour cela il faut tape `python3 LeNomDuFichier.py`\n\n## Commandes\n\n### Op√©rations Math√©matiques simples\n```python\n3+6\n```\n```python\n58-29\n```\n```python\n4*8\n```\n```python\n51/17\n```\n\n### Texte\n\n```python\nprint(\"Bonjour je m'appelle XXXXXXX\")\n```\n\nConcat√©nation avec \",\"\nprint(\"J'ai 27 ans. Ca fait\",27*365.25,\"jours\")\n\n## Variables\n\nUne variable est un objet d√©fini par un nom et qui contient une valeur.\n\nL'affectation d'une valeur √† une variable se fait avec `=`\n\n```python\npi=3.141592\n```\nL'appelle √† une variable est remplac√© par sa valeur\n\n```python\npi\n```\n\n```python\nprint(\"Ma variable contient la valeur\",pi)\n```\n\n```python\nrayon=17\nhauteur=33\nairebase=rayon*rayon*pi\nvolumecylindre=airebase*hauteur\nprint(\"Une cylindre de rayon\",rayon,\"et de hauteur\",hauteur)\nprint(\"L'aire de sa base est\",airebase)\nprint(\"Le volume du cylindre est\",volumecylindre)\n```\n\nOn peut r√©affecter une nouvelle valeur √† une variable, ce qui va √©craser la pr√©c√©dente. \n\n```python\nx=27\nx\nx=33\nx\nx=x+x\nx\n```\n\nAvec `\"\"` une variable peut √©galement contenir du text\n\n```python\nname=\"Bond\"\nfirstname=\"James\"\nprint(\"My name is\",name,firstname,name)\n```\n\nLa valeur d'une variable peut √™tre demand√© √† l'utilisateur interactivement avec `input(\"Un petit texte\")`\n\n```python\nname=input(\"Bonjour, quel est ton nom ? \")\n```\nS'il s'agit d'un nombre, une consertion text -\u003e number est requise avec `int()` pour un nombre entier ou `float()` pour un nombre √† virgule\n```python\nage=int(input(\"Quel est ton age ? \"))\n```\nLes variables sont bien m√©moris√©es\n```python\nprint(\"Enchant√©\",name,\"En 2060 ans tu auras\",age+2060-2022,\"ans !\")\n```\n\n## Programme \n\nToutes les commandes peuvent √™tre stock√©es dans un fichier NomDuFichier.py et execut√© sous la forme d'un programme avec python3 NomDuFichier.py\n\nExemple : Ouvrir un editeur de texte en tapant `gedit\u0026`\n\nDedans copier les commandes que nous venons de voir:\n\n```python\nname=input(\"Bonjour, quel est ton nom ? \")\nage=int(input(\"Quel est ton age ? \"))\nprint(\"Enchant√©\",name,\"En 2060 ans tu auras\",age+2060-2022,\"ans !\")\n```\nCliquer sur \"save\" et enregistrer le fichier sous `welcome.py`\n\nTaper la commande suivante pour executer votre programme : `python3 welcome.py`\n\n:::success\n**Exercice 1 Volume** \nEcrire un programme qui demande\n- la longueur\n- la largeur\n- la hauteur\n\nd'une boite et affiche son volume.\n:::\n\n## Conditionnelles\n\nLes conditionnelles permettent d'executer certaines commandes d'un programme que sous certaines conditions.\n\nLa syntaxe est la suivante :warning: l'indentation (les espaces en d√©but de lignes) est importante en python\n\n```python\nif CONDITION:\n    code execut√©\n    uniquement si\n    CONDITION est vrai\n```\n\nou\n\n```python\nif CONDITION:\n    code execut√©\n    uniquement si\n    CONDITION est vrai\nelse:\n    code execut√© si \n    CONDITION est faux\n```\n\n### Les op√©rateurs de comparaisons\n\nComme `=` est utilis√© pour l'affectation, √©crire `a=b` va remplacer la valeur de `a` par celle de `b`. Voici quelques op√©rateurs\n- Equals: `a == b`\n- Not Equals: `a != b`\n- Less than: `a \u003c b`\n- Less than or equal to: `a \u003c= b`\n- Greater than: `a \u003e b`\n- Greater than or equal to: `a \u003e= b`\n\nDans l'interpreteur python, taper:\n```\na=13\nb=24\na==b\na!=b\na\u003cb\na\u003c=b\na\u003eb\na\u003e=b\n```\n\nPython r√©pond `True` que l'op√©ration est vrai et `False` quand elle est fausse\n\nDans **gedit** \nEcrire le programme suivant\n```python\na=int(input(\"Valeur pour a:\"))\nb=int(input(\"Valeur pour b:\"))\n\nif a==b:\n    print(\"a et b sont √©gaux. Leur valeur est\",a)\nelse:\n    print(\"a et b sont diff√©rents\")\n```\n\nEnregistrer le programme sous le nom `if.py` et executer le 2 fois (avec des valeurs identiques et diff√©rentes)\n\n## Boucles\n\n## Fonctions","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Bioinfo/Bioinfo-Programmer-en-AWK":{"title":"Bioinfo - Programmer en AWK","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\n\u003e [!success] ***AWK***\n\u003e ***AWK*** est un langage pour traiter des fichiers *textes*, ligne-par-ligne. La ligne peut √™tre s√©par√©e en *champs* (colonnes ou mots).\n\nPrennez les fichiers d'entr√©es\n\n```bash\nmkdir ~/awk\ncd ~/awk\ncp /home/tludwig/master2ggb/tableawk.tsv .\ncp /home/tludwig/s.omalleysbar.txt .\nwget http://lysine.univ-brest.fr/~tludwig/master2/tp3/1.variants.vcf\n```\n\n### 1. Un programme simple\n\nAffiche chaque ligne en entr√©e, sans modification:\n\n```bash\ncat tableawk.tsv | awk '{print $0}'\n``` \n\n\u003e [!info]\n\u003e - `print` est la fonction qui permet d'afficher du texte.\n\u003e - `$0` signifie *toute la ligne*\n\n### 2. Acc√©der √† un champ \n\n```bash\ncat tableawk.tsv | awk '{print $2}'\n``` \n\n\u003e [!info]\n\u003e - `$i` signifie *la i$^{e}$ colonne*\n\n\u003e [!warning]  les espaces et tabulations ne se m√©langent pas bien\n\n### 3. Quelques variables globales\n\n```bash\ncat s.omalleysbar.txt | awk '{print NF}' | sort -n | uniq -c\ncat tableawk.tsv | awk '{print NR\": \"$0}'\n```\n\n\u003e [!info]\n\u003e - `NF` (*Number of Fields*) indique le nombre de colonne dans la ligne actuelle\n\u003e - `NR` (*Number of Reccords*) indique le nombre de ligne lu jusqu'√† pr√©sent\n\n### 4. Utiliser les variables\n\n```bash\ncat s.omalleysbar.txt | awk '{print $NF}' | head\n```\n\n\u003e [!info]\n\u003e  `$NF` signifie la derni√®re colonne (c'est-√†-dire la NF$^{e}$ colonne) \n\n### 5. BEGIN / END\n\n- La section `BEGIN{}` est ex√©cut√©e int√©gralement avant de lire la premi√®re ligne.\n- La section `END{}` est ex√©cut√©e int√©gralement apr√®s avec trait√© la derni√®re ligne.\n\n```bash\ncat tableawk.tsv | awk '\n    BEGIN{\n        print \"Lets-a-gooo\"\n    }\n    {\n        print $0\n    }\n    END{\n        print \"Il y avait \"NR\" lignes dans ce fichier.\"\n    }'\n``` \n\n### 6. Multiples instructions\n\nLes instructions sont s√©par√©es par des point-virgules `;`\n\n```bash\ncat tableawk.tsv | awk '\n    {\n        print NR; \n        print $0\n    }'\n```\n\n### 7. Conditionnelles\n\n- `if(condition){block}` permet d'ex√©cuter `block` si `condition` est vrai\n\n```bash\ncat tableawk.tsv | awk '\n    {\n        if($0 ~ \"^#\"){\n            print \"il y a \"NF\" colonnes\"\n        }\n    }'\n```\n\n\u003e [!info]\n\u003e  `~ \"^#\"` indique les lignes qui commencent par `#`\n\n- `else{block2}` permet d'ex√©cuter `block2` quand `condition` est faux\n\n```bash\ncat tableawk.tsv | awk '\n    {\n        if($0 ~ \"^#\"){\n            print \"il y a \"NF\" colonnes\"\n        } \n        else{\n            print $0\n        }\n    }'\n```\n\nOn ne garde que les filles (et l'en-t√™te)\n\n```bash\ncat tableawk.tsv | awk '\n    {\n        if($0 ~ \"^#\" || $3 == \"F\"){\n            print $0\n        }\n    }'\n```\n\n\n### 8. D√©finir et utiliser des variables\n\n- `nom_de_variable = 18` ou `nom_de_variable = \"Texte\"` permet d'assigner une valeur √† une variable\n\n```bash\ncat tableawk.tsv | awk '\n    BEGIN{\n        male=0\n    }\n    {\n        if($3 == \"M\")\n        {\n            male=male+1\n        }\n    }\n    END{\n        print \"There are \"male\" men\"\n    }'\n```\n\n\u003e [!warning] Ne pas confondre\n\u003e - `a = 2` $\\rightarrow$ affecte la valeur 2 √† la variant `a` \n\u003e - `b == 3` $\\rightarrow$ renvoie `TRUE` si la variable `b` est √©gale √† 3 \n\nOn peut utiliser une variable dans un calcul\n\n```bash\ncat tableawk.tsv | awk '\n    BEGIN{\n        height=0\n    }\n    {\n        if($0 !~ \"^#\"){\n            height=height+$4\n        }\n    }\n    END{\n        mean=height/(NR-1); \n        print \"mean height: \"mean\n    }'\n```\n\n### 9. Tableaux\n\n- `x[]` indique un tableau du nom de `x`\n\n```bash\ncat tableawk.tsv | awk '\n    BEGIN{\n        height[\"M\"]=0;\n        height[\"F\"]=0;\n        nb[\"M\"]=0;\n        nb[\"F\"]=0;\n    }\n    {\n        height[$3]=height[$3]+$4;\n        nb[$3] = nb[$3] + 1;\n    }\n    END{\n        mean[\"M\"]=height[\"M\"]/nb[\"M\"]; \n        mean[\"F\"]=height[\"F\"]/nb[\"F\"]; \n        print \"mean height.\";\n        print \"for men \"mean[\"M\"];\n        print \"for women \"mean[\"F\"];\n    }'\n```\n\n- Les *cases vides* des tableaux contiennent 0. On peut donc simplifier en \n\n```bash\ncat tableawk.tsv | awk '\n    {\n        height[$3]=height[$3]+$4;\n        nb[$3] = nb[$3] + 1;\n    }\n    END{\n        mean[\"M\"]=height[\"M\"]/nb[\"M\"]; \n        mean[\"F\"]=height[\"F\"]/nb[\"F\"]; \n        print \"mean height.\";\n        print \"for men \"mean[\"M\"];\n        print \"for women \"mean[\"F\"];\n    }'\n```\n\n\n### 10. Parcourir un tableau\n\n- `for (variable in tableau){block}` permet d'affecter √† `variable` succ√©ssivement chaque cl√© d'un tableau et d'ex√©cuter `block` pour cette cl√©.\n\n```bash\ncat tableawk.tsv | awk '\n    {\n        if($0 !~ \"^#\"){\n            age[$2]=age[$2] + 1;\n        }\n    }\n    END{\n        for(a in age){\n            print \"number of \"a\" years old : \"age[a];\n        }\n    }'\n```\n\n### 11. Un peu de bioinfo ?\n\nOn consid√®re le VCF `1.variants.vcf` et on veut conna√Ætre le premi√®re et le dernier variant de chaque chromosome.\n\n1. On va √©vider de traiter les lignes d'en-t√™te grace √† `if($0 !~ \"^#\")`\n2. On va stoquer les variants dans des tableaux `first[]` et `last[]`\n3. On va parcourir ces tableaux et afficher\n\n- :warning: On va chercher les minimums et maximum des positions. Les *cases vides* des tableaux contiennent 0.\n- `||` signifie ***OU***\n- `if(cond1 || cond2)` v√©rifie que `cond1` ou `cond2` (ou les deux) est VRAI\n\n```bash\ncat 1.variants.vcf | awk '\n    {\n        if($0 !~ \"^#\"){\n            chr=$1; \n            pos=$2;\n            if(pos \u003c first[chr] || first[chr] == 0){\n                first[chr] = pos;\n            }\n            if(pos \u003e last[chr]){\n                last[chr] = pos;\n            }            \n        }\n    }\n    END{\n        for(chr in last){\n            print \"Chromosome \"chr\":\"first[chr]\"-\"last[chr];\n        }\n    }'\n```\n### 12. :smiling_imp: Welcome to my world of pain :smiling_imp:\n\nOn veut afficher tous les variants pour lesquels l'enfant est homozyogote et les parents h√©t√©rozygotes.\n\n#### Rappel du format\n\n```bash\ncat 1.variants.vcf | grep \"^#\" | tail -1\n```\n\n#### Eviter les en-t√™tes\n\n```bash\ncat 1.variants.vcf | grep -v \"^#\" | head\n```\n\n#### On ne prend que les colonnes qui nous int√©ressent\n\n- chrom (1)\n- pos (2)\n- id (3)\n- ref (4)\n- alt (5)\n- enfant (10)\n- maman (11)\n- papa (12)\n\n```bash\ncat 1.variants.vcf | grep -v \"^#\" | head | cut -f-5,10-\n```\n\n#### On s'int√©resse au g√©notype, mais pas aux annotations qui suivent\n\nOn transforme les colonnes en lignes\n\n```bash\ncat 1.variants.vcf | grep -v \"^#\" | head | cut -f-5,10- | tr \"\\t\" \"\\n\"\n```\n\nOn enl√®ve se qui suit les doubles points `:`\n\n```bash\ncat 1.variants.vcf | grep -v \"^#\" | head | cut -f-5,10- | tr \"\\t\" \"\\n\" | cut -f1 -d':'\n```\n\nOn reforme les lignes (il y avait 8 colonnes)\n\n```bash\ncat 1.variants.vcf | grep -v \"^#\" | cut -f-5,10- | tr \"\\t\" \"\\n\" | cut -f1 -d':' | paste - - - - - - - - \u003e variants.tsv\ncat variants.tsv | head \n```\n\n#### C'est parti\n\nLes g√©notypes sont dans les colonnes\n- enfant : 6\n- maman : 7\n- papa : 8\n\nOn affiche tout\n\n```bash\ncat variants.tsv | awk '\n    {\n        if($6 == \"1/1\" \u0026\u0026 $7 == \"0/1\" \u0026\u0026 $8 == \"0/1\")\n        {\n            print $0\n        }\n    }' \n```\n\n#### Solution alternative pour garder toute la ligne et faire un VCF valide avec en-t√™te\n\n```bash\ncat 1.variants.vcf | awk '\n    {\n        if($1 ~ \"^#\"){\n            print $0\n        }\n        \n        if($10 ~ \"^1/1\" \u0026\u0026 $11 ~ \"^0/1\" \u0026\u0026 $12 ~ \"^0/1\")\n        {\n            print $0\n        }\n    }' \n```\n\n\u003e [!warning] Ces solutions ne marchent que dans le cas des variants bialleliques. \n\u003e Pour un variant de type 1/1 | 0/1 | 1/2, il faut s√©parer les chromosomes\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Epid%C3%A9mio/2022-2023/Epid%C3%A9miologie-TP1-R":{"title":"BioInfo TP1 - Unix \u0026 Linux","content":"\n###### tags #m2ggb #epidemiologie\n*contact :* ludwig@univ-brest.fr \n\n## 1. Introduction\n\nR est un syst√®me d‚Äôanalyse statistique et graphique cr√©√© par Ross Ihaka et Robert Gentleman. R est √† la fois un logiciel et un langage qualifi√© de dialecte du langage S cr√©√© par AT\u0026T Bell Laboratories. Il y a des diff√©rences importantes dans la conception de R et celle de S.\n\nR est distribu√© librement sous les termes de la GNU General Public Licence; son d√©veloppement et sa distribution sont assur√©s par plusieurs statisticiens rassembl√©s dans le R Development Core Team.\n\nR comporte de nombreuses fonctions pour les analyses statistiques et les graphiques; ceux-ci sont visualis√©s imm√©diatement dans une fen√™tre propre et peuvent √™tre export√©s sous divers formats (jpg, png, bmp, ps, pdf, emf, pictex, xfig ; les formats disponibles peuvent d√©pendre du syst√®me d‚Äôexploitation). Les r√©sultats des analyses statistiques sont affich√©s √† l‚Äô√©cran, certains r√©sultats partiels (valeurs de P, coefficients de r√©gression, r√©sidus, . . .) peuvent √™tre sauv√©s √† part, export√©s dans un fichier ou utilis√©s dans des analyses ult√©rieures.\n\nLe langage R permet, par exemple, de programmer des boucles qui vont analyser successivement diff√©rents jeux de donn√©es. Il est aussi possible de combiner dans le m√™me programme diff√©rentes fonctions statistiques pour r√©aliser des analyses plus complexes. Les utilisateurs de R peuvent b√©n√©ficier des nombreux programmes √©crits pour S et disponibles sur internet, la plupart de ces programmes √©tant directement utilisables avec R.\n\nDe prime abord, R peut sembler trop complexe pour une utilisation par un non-sp√©cialiste. Ce n‚Äôest pas forc√©ment le cas. En fait, R privil√©gie la flexibilit√©. Alors qu‚Äôun logiciel classique affichera directement les r√©sultats d‚Äôune analyse, avec R ces r√©sultats sont stock√©s dans un ‚Äúobjet‚Äù, si bien qu‚Äôune analyse peut √™tre faite sans qu‚Äôaucun r√©sultat ne soit affich√©. L‚Äôutilisateur peut √™tre d√©concert√© par ceci, mais cette facilit√© se r√©v√®le extr√™mement utile. En effet, l‚Äôutilisateur peut alors extraire uniquement la partie des r√©sultats qui l‚Äôint√©resse. Par exemple, si l‚Äôon doit faire une s√©rie de 20 r√©gressions et que l‚Äôon veuille comparer les coefficients des diff√©rentes r√©gressions, R pourra afficher uniquement les coefficients estim√©s : les r√©sultats tiendront donc sur une ligne, alors qu‚Äôun logiciel plus classique pourra ouvrir 20 fen√™tres de r√©sultats. On verra d‚Äôautres exemples illustrant la flexibilit√© d‚Äôun syst√®me comme R vis-√†-vis des logiciels classiques.\n\n## 2. Prise en main\n\n### 2.1. Lancer R\n\n```bash\nR\n```\n\n### 2.2. Quitter R\n\n```r\n\u003e q()\n```\n\n## 3. Fonctionnement de R\nR est un langage interpr√©t√©, c'est-√†-dire que les commandes tap√©es au clavier sont directement ex√©cut√©es sans qu'il soit n√©cessaire de construire un programme.\n\nLa syntaxe de R se veut simple et intuitive. Avec R, une fonction, pour √™tre ex√©cut√©e, s'√©crit toujours avec des parenth√®ses, m√™me si elle ne contiennent pas d'argument (exemple `ls()`). Si l'utilisateur tape le nom de la fonction sans parenth√®ses, R affichera le contenu des instructions de cette fonction. Ex:\n\n```r\n\u003e plot\nfunction (x, y, ...)\nUseMethod(\"plot\")\n\u003cbytecode: 0x2eefdd0\u003e\n\u003cenvironment: namespace:graphics\u003e\n```\nQuand R est utilis√©, les variables, les donn√©es, les fonctions, les r√©sultats, etc., sont stock√©s dans la m√©moire de l‚Äôordinateur sous forme d‚Äô*objets* qui ont chacun un *nom*. L‚Äôutilisateur va agir sur ces objets avec des op√©rateurs (arithm√©tiques, logiques, de comparaison, ...) et des *fonctions* (qui sont elles-m√™mes des objets).\n\n### 3.1 Op√©rations de base\nL'affectation d'une valeur √† un objet peut se faire de plusieurs fa√ßon √©quivalente\n```r\n\u003e a \u003c- 1\n\u003e 2 -\u003e b\n\u003e d = 3\n```\n\npour afficher le contenu d'un objet on tape simplement son nom \n```r\n\u003e a\n[1] 1\n\u003e b\n[1] 2\n\u003e d\n[1] 3\n```\nSi l'objet existe d√©j√†, sa valeur pr√©c√©dente est effac√©e.\n```r\n\u003e n \u003c- 5 + 7\n\u003e n\n[1] 12\n\u003e n \u003c- 6 * 8\n\u003e n\n[1] 48\n```\nLa fonction `ls()` donne la liste des objets en m√©moire\n```r\n\u003e ls()\n[1] \"a\" \"b\" \"d\" \"n\"\n```\nPour obtenir de l'aide, on utilise `?` ou `help()`\n```r\n\u003e ?ls\n\u003e help(\"ls\")\n```\n\n## 4. Les objets\n\n### 4.1. Simples Valeurs\n\nR manipule des objets : ceux-ci sont caract√©ris√©s par leur nom et leur contenu, mais aussi par des *attributs* qui vont sp√©cifier le type de donn√©es repr√©sent√© par un objet. Consid√©rons une variable qui prendrait les valeurs 1, 2 ou 3 : une telle variable peut repr√©senter une variable enti√®re (par exemple, le nombre d‚Äôoeufs dans un nid), ou le codage d‚Äôune variable cat√©gorique (par exemple, le sexe de crustac√©s : 1=m√¢le, 2=femelle ou 3=hermaphrodite).\n\nLe traitement de cette variable ne sera pas le m√™me dans les deux cas : les attributs de l‚Äôobjet donnent l‚Äôinformation n√©cessaire. Plus techniquement, l‚Äôaction d‚Äôune fonction sur un objet va d√©pendre des attributs de celui-ci.\n\nLes objets ont tous deux attributs : le *mode* et la *longueur*. Le mode est le type des √©l√©ments d‚Äôun objet; il en existe quatre principaux :\n- num√©rique\n- caract√®re\n- complexe\n- logique (`FALSE` ou `TRUE`). \n\nD‚Äôautres modes existent qui ne repr√©sentent pas des donn√©es, par exemple *fonction* ou *expression*.\nLa longueur est le nombre d‚Äô√©l√©ments de l‚Äôobjet. Pour conna√Ætre le mode et la longueur d‚Äôun objet on peut utiliser, respectivement, les fonctions `mode` et `length` :\n\n```r\n\u003e x \u003c- 1\n\u003e mode(x)\n[1] \"numeric\"\n\u003e length(x)\n[1] 1\n\u003e text=\"May the force be with you\"\n\u003e mode(text)\n[1] \"character\"\n\u003e length(text)\n[1] 1\n\u003e test=TRUE\n\u003e mode(test)\n[1] \"logical\"\n\u003e length(test)\n[1] 1\n\u003e cmp=2i+1\n\u003e mode(cmp)\n[1] \"complex\"\n\u003e length(cmp)\n[1] 1\n```\n\nDans tous ces exemple, la longueur est toujours 1. Mais R peut √©galement manipuler des objets plus complexes, comme des vecteurs.\n```r\n\u003e v \u003c- c(17,-2.3)\n\u003e v\n[1] 17.0 -2.3\n\u003e mode(v)\n[1] \"numeric\"\n\u003e length(v)\n[1] 2\n```\nQuelque soit le mode, les valeurs manquantes sont repr√©sent√©es par `NA` (*not available*).  Une valeur num√©rique tr√®s grande peut √™tre sp√©cifi√©e avec une notation exponentielle. Les valeurs $\\pm\\infty$ sont repr√©sent√©es par `Inf` et `-Inf`. Les r√©sultats qui ne sont pas des nombres valides sont repr√©sent√©s par `NaN` (*Not a Number*).\n```r\n\u003e N \u003c- 2.1e23\n\u003e N\n[1] 2.1e+23\n\n\u003e x \u003c- 5/0\n\u003e x\n[1] Inf\n\n\u003e exp(x)\n[1] Inf\n\n\u003e exp(-x)\n[1] 0\n\n\u003e x - x\n[1] NaN\n```\n\n### 4.2. Vecteurs\n\nOn cr√©e un vecteur avec la fonction `c` (*concatenate*).\n```r\n\u003e c(1 ,2.6, 47, 98, 44.4)\n[1]  1.0  2.6 47.0 98.0 44.4\n```\n\nil est possible d'isoler une ou plusieurs valeurs d'un vecteur avec `[]`\n```r\n\u003e c \u003c- c(1 ,2.6, 47, 98, 44.4)\n\u003e c[2]\n[1] 2.6\n\u003e c[1] \u003c- 1.1\n\u003e c\n[1]  1.1  2.6 47.0 98.0 44.4\n\u003e c + 2\n```\n\nil est aussi possible de concat√©ner deux vecteurs\n```r\n\u003e a \u003c- c(1,3)\n\u003e b \u003c- c(3,7)\n\u003e c(a,b)\n[1] 1 3 3 7\n\u003e c(a,2:8,b)\n[1] 1 3 2 3 4 5 6 7 8 3 7\n```\n\n### 4.3. Matrices\n\nLes matrices peuvent √™tre cr√©√©es avec la fonction matrix:\n```r\n\u003e A \u003c- matrix( 1:10, ncol=5)\n\u003e A\n[,1] [,2] [,3] [,4] [,5]\n[1,] 1 3 5 7 9\n[2,] 2 4 6 8 10\n```\n\nComme pour les vecteurs, il est possible d‚Äôextraire une valeur, une ligne ou une colonne avec `[]`.\n```r\n\u003e A[1,4]\n[1] 7\n\u003e A[2, , drop=FALSE]\n[,1] [,2] [,3] [,4] [,5]\n[1,] 2 4 6 8 10\n```\n\n\u003e [!info]\n\u003e :pencil: l‚Äôoption `drop=FALSE` permet de garder le r√©sultat sous forme de matrice et non de vecteur.\n\n### 4.4. Listes\n\nles listes d'objets peuvent √™tre cr√©√©es avec la fonction `list()`\n```r\n\u003e l \u003c- list(Prenom=c(\"Ophelie\", \"Annabelle\"), Nom=\"Dupont\")\n\u003e l\n$Prenom\n[1] \"Ophelie\" \"Annabelle\"\n$Nom\n[1] \"Dupont\"\n```\n\nles objets contenus dans la liste peuvent √™tre extraits avec `$`.\n```r\n\u003e l$Prenom\n[1] \"Ophelie\" \"Annabelle\"\n```\n\n## 4.5. Dataframes\n\nUn DataFrame est une liste particuli√®re.\n- c'est une liste de vecteurs de donn√©es\n- ces vecteurs sont de m√™me longueur\n- ces vecteurs peuvent √™tre nomm√©s\n- les lignes peuvent √©galement √™tre nomm√©es\n- on peut manipuler un dataframe comme une matrice, par indices `[ligne, colonne]`\n\n```r\n\u003e annee \u003c- c(1995,2001,1987,2000)\n\u003e taille \u003c- c(172,153,190,168)\n\u003e sexe \u003c- c(\"M\",\"F\",\"M\",NA)\n\u003e frame \u003c- data.frame(list(annee, taille, sexe))\n\u003e colnames(frame) \u003c- c(\"Ann√©e\",\"Taille\",\"Sexe\")\n\u003e rownames(frame) \u003c- c(\"Eric\", \"Diane\", \"Michael\", \"Alex\")\n```\n\non peut obtenir des informations sur le data frame\n\n```r\n\u003e frame\n        Ann√©e Taille Sexe\nEric     1995    172    M\nDiane    2001    153    F\nMichael  1987    190    M\nAlex     2000    168 \u003cNA\u003e\n\u003e class(frame)\n[1] \"data.frame\"\n\u003e summary(frame)\n     Ann√©e          Taille        Sexe\n Min.   :1987   Min.   :153.0   F   :1\n 1st Qu.:1993   1st Qu.:164.2   M   :2\n Median :1998   Median :170.0   NA's:1\n Mean   :1996   Mean   :170.8\n 3rd Qu.:2000   3rd Qu.:176.5\n Max.   :2001   Max.   :190.0\n```\n\nAcc√®s aux variables\n\n```r\n\u003e frame$Ann√©e #par nom\n\u003e frame[[1]] #format liste\n\u003e frame[,1] #format matrice\n\u003e frame[[\"Ann√©e\"]]\n\u003e frame[,\"Ann√©e\"]\n[1] 1995 2001 1987 2000\n\n\u003e frame[1] # par num.col\n\u003e frame[\"Ann√©e\"]\n        Ann√©e\nEric     1995\nDiane    2001\nMichael  1987\nAlex     2000\n```\n\nAcc√®s aux individus\n\n```r\n\u003e frame[1,]\n     Ann√©e Taille Sexe\nEric  1995    172    M\n\u003e frame[c(1,3),]\n        Ann√©e Taille Sexe\nEric     1995    172    M\nMichael  1987    190    M\n\u003e frame[\"Diane\",]\n      Ann√©e Taille Sexe\nDiane  2001    153    F\n\u003e frame[c(1,3),2:3]\n        Taille Sexe\nEric       172    M\nMichael    190    M\n\u003e frame[c(\"Eric\",\"Diane\"), c(\"Ann√©e\",\"Sexe\")]\n      Ann√©e Sexe\nEric   1995    M\nDiane  2001    F\n```\n\n## 5. Lire des donn√©es dans un fichier\n\nPour les lectures et √©critures dans les fichiers, R utilise le *r√©pertoire de travail*. Pour conna√Ætre ce r√©pertoire, on peut utiliser la commande `getwd()` (*get working dirctory*). Il est possible de changer ce r√©pertoire avec `setwd(\"/NOUVEAU/REPERTOIRE\")`.\n\nR peut lire des donn√©es stock√©s dans des fichiers texte √† l'aide de la fonction `read.table()`\n\nLa fonction `read.table()` a pour effet de cr√©er un Data Frame et est donc le moyen principal pour lire des fichiers de donn√©es. Par exemple, si on a un fichier nomm√© *data.dat*, la commande \n```r\n\u003e mydata \u003c- read.table(\"data.dat\")\n```\ncr√©era un tableau de donn√©es nomm√© *mydata*, et les variables, par d√©faut nomm√©s *V1*,*V2*,...,*Vn*, pourront √™tre acc√©d√©es individuellement par\n- `mydata$V1`, `mydata$V2`,...,`mydata$Vn` ou \n- `mydata[\"V1\"]`, `mydata[\"V2\"]`,..., `mydata[\"Vn\"]`, ou encore \n- `mydata[, 1]`, `mydata[, 2]`,..., `mydata[, n]`.\n\nIl y a plusieurs options dont voici les valeurs par d√©faut (c'est √† dire celles utilis√©s par R si elles sont omises par l'utilisateur).\n```r\nread.table(file, header = FALSE, sep = \"\", quote = \"'\", dec = \".\",\n\trow.names, col.names, as.is = FALSE, na.strings = \"NA\",\n\tcolClasses = NA, nrows = -1,\n\tskip = 0, check.names = TRUE, fill = !blank.lines.skip,\n\tstrip.white = FALSE, blank.lines.skip = TRUE,\n\tcomment.char = \"#\")\n```\n| Option | Description |\n|---|---|\n| `file` | le nom du fichier (entre `\"\"` ou une variable de mode caract√®re), √©ventuellement avec son chemin d‚Äôacc√®s (le symbole `\\` est interdit et doit √™tre remplac√© par `/`, m√™me sous Windows), ou un acc√®s distant √† un fichier de type URL (`http://...`) |\n| `header` | une valeur logique (`FALSE` ou `TRUE` indiquant si le fichier contient les noms des variables sur la 1$^{e}$ ligne |\n| `sep` | le s√©parateur de champ dans le fichier, par exemple `sep=\"\\t\"` si c‚Äôest une tabulation |\n| `quote` | les caract√®res utilis√©s pour citer les variables de mode caract√®re |\n| `dec` | le caract√®re utilis√© pour les d√©cimales |\n| `row.names` | un vecteur contenant les noms des lignes qui peut √™tre un vecteur de mode character, ou le num√©ro (ou le nom) d‚Äôune variable du fichier (par d√©faut : `1`, `2`, `3`, ...) |\n| `col.names` | un vecteur contenant les noms des variables (par d√©faut : `V1`, `V2`, `V3`, ...) |\n| `as.is` | contr√¥le la conversion des variables caract√®res en facteur (si `FALSE`) ou les conserve en caract√®res (si `TRUE`) ; `as.is` peut √™tre un vecteur logique, num√©rique ou caract√®re pr√©cisant les variables conserv√©es en caract√®re |\n| `na.strings` | indique la valeur des donn√©es manquantes (sera converti en `NA`) |\n| `colClasses` | un vecteur de caract√®res donnant les classes √† attribuer aux colonnes |\n| `nrows` | le nombre maximum de lignes √† lire (les valeurs n√©gatives sont ignor√©es) |\n| `skip` | le nombre de lignes √† sauter avant de commencer la lecture des donn√©es |\n| `check.names` | si `TRUE`, v√©rifie que les noms des variables sont valides pour R |\n| `fill` | si `TRUE` et que les lignes n‚Äôont pas tous le m√™me nombre de variables, des *blancs* sont ajout√©s |\n| `strip.white` | (conditionnel √† `sep`) si `TRUE`, efface les espaces (= blancs) avant et apr√®s les variables de mode caract√®re |\n| `blank.lines.skip` | si `TRUE`, ignore les lignes *blanches* |\n| `comment.char` | un caract√®re qui d√©finit des commentaires dans le fichier de donn√©es, la lecture des donn√©es passant √† la ligne suivante (pour d√©sactiver cet option, utiliser `comment.char = \"\"`) |\n\n## 6. Enregistrer les donn√©es dans un fichier\n\nLa fonction `write.table` √©crit dans un fichier un objet, typiquement un tableau de donn√©es, mais cela peut bien √™tre un autre type d'objet (vecteur, matrice, ...). Les arguments et options sont : \n```r\nwrite.table(x, file = \"\", append = FALSE, quote = TRUE, sep = \" \",\n\teol = \"\\n\", na = \"NA\", dec = \".\", row.names = TRUE,\n\tcol.names = TRUE, qmethod = c(\"escape\", \"double\"))\n```\n| Option | Description |\n|---|---|\n| `x` | le nom de l‚Äôobjet  √©crire |\n| `file` | le nom du fichier (par d√©faut l‚Äôobjet est affich√© √† l‚Äô√©cran) |\n| `append` | si `TRUE` ajoute les donn√©es sans effacer celles √©ventuellement existantes dans le fichier |\n| `quote` | une variable logique ou un vecteur num√©rique : si `TRUE` les variables de mode caract√®re et les facteurs sont √©crits entre `\"\"`, sinon le vecteur indique les num√©ros des variables √† √©crire entre `\"\"` (dans les deux cas les noms des variables sont √©crits entre `\"\"` mais pas si `quote = FALSE`) |\n| `sep` | le s√©parateur de champ dans le fichier |\n| `eol` | le caract√®re imprim√© √† la fin de chaque ligne (`\"\\n\"` correspond √† un retour chariot) |\n| `na` | indique le caract√®re utilis√© pour les donn√©es manquantes |\n| `dec` | le caract√®re utilis√© pour les d√©cimales |\n| `row.names` | une variable logique indiquant si les noms des lignes doivent √™tre √©crits dans le fichier |\n| `col.names` | idem pour les noms des colonnes |\n| `qmethod` | sp√©cifie, si `quote=TRUE`, comment sont trait√©es les guillemets doubles `\"` incluses dans les variables de mode caract√®re : si `\"escape\"` (ou `\"e\"`, le d√©faut) chaque `\"` est remplac√©e par `\\\"`, si `\"d\"` chaque `\"` est remplac√©e par `\"\"` |\n\nPour √©crire de fa√ßon plus simple un objet dans un fichier, on peut utiliser la commande `write.table(x, file=\"data.txt\")` o√π `x` est le nom de l'objet.\n\n## 7. G√©n√©rer des donn√©es\n\n### 7.1. S√©quences r√©guli√®res\n\nTous les nombres de 1 √† 30\n```r\n\u003e x \u003c- 1:30\n```\n\nOn a ainsi un vecteur `x` avec 30 √©l√©ments.\nL'op√©rateur `:` est prioritaire sur les op√©rations arithm√©tiques au sein d'une expression : \n```r\n\u003e 1:10-1\n[1] 0 1 2 3 4 5 6 7 8 9\n\u003e 1:(10-1)\n[1] 1 2 3 4 5 6 7 8 9\n```\n\nLa fonction `seq` peut g√©n√©rer des s√©quences de nombres r√©els de la mani√®re suivante ;\n```r\n\u003e seq(1, 5, 0.5)\n[1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0\n```\no√π le premier nombre indique le d√©but de la s√©quence, le second la fin, et le troisi√®me l'incr√©ment.\n\nLa fonction `rep` cr√©e un vecteur qui aura tous ses √©l√©ments identiques :\n```r\n\u003e rep(1, 30)\n[1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n```\n\u003c!--   \nLa fonction `sequence` va cr√©er une suite de s√©quences de nombres enti√®res qui chacune se termine par les nombres donn√©s comme arguments :\n```r\n\u003e sequence(4:5)\n[1] 1 2 3 4 1 2 3 4 5\n\u003e sequence(c(10,5))\n[1] 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5\n```\n--\u003e\n### 7.2. S√©quences al√©atoires\n\nIl est utile en statistique de pouvoir g√©n√©rer des donn√©es al√©atoires, et R peut le faire pour un grand nombre de fonctions de densit√© de probabilit√©. Ces fonctions sont de la form `rfunc(n, p1, p2, ..., pn`), o√π `func` indique la loi de probabilit√©, `n` le nombre de donn√©es g√©n√©r√©es et `p1, p2, ..., pn` sont les valeurs des param√®tres de la loi.\n\n| loi | fonction |\n|---|---|\n| *Gauss* (normale) | `rnorm(n, mean=0, sd=1)` |\n| exponentielle | `rexp(n, rate=1)` |\n| gamma | `rgamma(n, shape, scale=1)` |\n| *Poisson* | `rpois(n, lambda)` |\n| *Weibull* | `rweibull(n, shape, scale=1)` |\n| *Cauchy* | `rcauchy(n, location=0, scale=1)` |\n| beta | `rbeta(n, shape1, shape2)` |\n| *Student* (t) | `rt(n, df)` |\n| *Fisher‚ÄìSnedecor* (F) | `rf(n, df1, df2)` |\n| *Pearson* ($\\chi^2$) | `rchisq(n, df)` |\n| binomiale | `rbinom(n, size, prob)` |\n| multinomiale | `rmultinom(n, size, prob)` |\n| g√©om√©trique | `rgeom(n, prob)` |\n| hyperg√©om√©trique | `rhyper(nn, m, n, k)` |\n| logistique | `rlogis(n, location=0, scale=1)` |\n| lognormale | `rlnorm(n, meanlog=0, sdlog=1)` |\n| binomiale n√©gative | `rnbinom(n, size, prob)` |\n| uniforme | `runif(n, min=0, max=1)` |\n| statistiques de Wilcoxon | `rwilcox(nn, m, n)`, `rsignrank(nn, n)` |\n\n## 8. Merge\n\nLa fonction `merge()` permet de joindre deux tables sur une cl√© (colonne) identique. Par d√©faut, la fonction renvoie l'intersection des deux tables, mais il est √©galement possible d'obtenir l'union des tables, ou de compl√©ter les donn√©es d'une des tables.\n```r\n\u003e t1 \u003c- read.table(\"/home/tludwig/master2ggb/table1.tsv\", header=TRUE)\n\u003e t1\n         Nom Age Sexe\n1     Emilie  23    F\n2       Jean  21    H\n3 Christophe  23    H\n4      Marie  21    F\n5     Pierre  25    H\n6     Sophie  24    F\n\n\u003e t2 \u003c- read.table(\"/home/tludwig/master2ggb/table2.tsv\", header=TRUE)\n\u003e t2\n   Prenom    Ville\n1   Aline   Angers\n2    Jean    Brest\n3 Caradoc   Vannes\n4   Marie    Brest\n5  Sophie Bordeaux\n6  Marcel Toulouse\n\n\u003e merge(t1,t2,by.x=\"Nom\",by.y=\"Prenom\")\n     Nom Age Sexe    Ville\n1   Jean  21    H    Brest\n2  Marie  21    F    Brest\n3 Sophie  24    F Bordeaux\n\n\u003e merge(t1,t2,by.x=\"Nom\",by.y=\"Prenom\",all=TRUE)\n         Nom Age Sexe    Ville\n1 Christophe  23    H     \u003cNA\u003e\n2     Emilie  23    F     \u003cNA\u003e\n3       Jean  21    H    Brest\n4      Marie  21    F    Brest\n5     Pierre  25    H     \u003cNA\u003e\n6     Sophie  24    F Bordeaux\n7      Aline  NA \u003cNA\u003e   Angers\n8    Caradoc  NA \u003cNA\u003e   Vannes\n9     Marcel  NA \u003cNA\u003e Toulouse\n\n\u003e merge(t1,t2,by.x=\"Nom\",by.y=\"Prenom\",all.x=TRUE)\n         Nom Age Sexe    Ville\n1 Christophe  23    H     \u003cNA\u003e\n2     Emilie  23    F     \u003cNA\u003e\n3       Jean  21    H    Brest\n4      Marie  21    F    Brest\n5     Pierre  25    H     \u003cNA\u003e\n6     Sophie  24    F Bordeaux\n\n\n\u003e merge(t1,t2,by.x=\"Nom\",by.y=\"Prenom\",all.y=TRUE)\n      Nom Age Sexe    Ville\n1    Jean  21    H    Brest\n2   Marie  21    F    Brest\n3  Sophie  24    F Bordeaux\n4   Aline  NA \u003cNA\u003e   Angers\n5 Caradoc  NA \u003cNA\u003e   Vannes\n6  Marcel  NA \u003cNA\u003e Toulouse\n\n```\n\n## 9. Selection dans un vecteur\n\nIl est possible de filtrer un tableau pour ne garder que certaines valeurs.\n```r\n\u003e t1\n         Nom Age Sexe\n1     Emilie  23    F\n2       Jean  21    H\n3 Christophe  23    H\n4      Marie  21    F\n5     Pierre  25    H\n6     Sophie  24    F\n\n\u003e subset(t1, t1$Sexe == \"F\")\n     Nom Age Sexe\n1 Emilie  23    F\n4  Marie  21    F\n6 Sophie  24    F\n\n\u003e t1[t1$Age \u003c 24, \"Age\"]\n[1] 23 21 23 21\n```\n## 10. Statistiques\n\nR est un langage de programmation avant tout utilis√© pour sa puissance dans le domaine des statistiques.\n\nNous verrons quelques fonctions de base dans ce domaine.\n```r\n\u003e v \u003c- (sample.int(101,size=100,replace=TRUE)-1)/100 # 100 nombre entre 0 et 1 arondi √† 2 d√©cimales\n\u003e max(v)\n[1] 1\n\u003e min(v)\n[1] 0\n\u003e mean(v)\n[1] 0.5852\n\u003e median(v)\n[1] 0.65\n\u003e quantile(v, .33)\n   33%\n0.4567\n\u003e quantile(v, c(.1,.2,.3,.4,.5,.6,.7,.8,.9))\n  10%   20%   30%   40%   50%   60%   70%   80%   90%\n0.139 0.332 0.440 0.536 0.650 0.718 0.796 0.852 0.931\n\u003e sum(v)\n[1] 58.52\n\u003e sum(v \u003e= 0.75) # combien de valeur \u003e= 0.75 ?\n[1] 37\n\u003e var(v) #variance\n[1] 0.08217067\n\u003e sd(v) # standard deviation\n[1] 0.2866543\n\u003e summary(v)\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 0.0000  0.3925  0.6500  0.5852  0.8400  1.0000\n\u003e library(Hmisc)\n\u003e describe(v)\n       n  missing distinct     Info     Mean      Gmd      .05      .10\n     100        0       61        1   0.5852   0.3277   0.0890   0.1390\n     .25      .50      .75      .90      .95\n  0.3925   0.6500   0.8400   0.9310   0.9600\nlowest : 0.00 0.02 0.03 0.07 0.09, highest: 0.95 0.96 0.97 0.98 1.00\n\n\u003e table(v) # valeurs et nombre d'occurrences\n\n# en regardant les sortie de v et diff(v), que fait la fonction diff ?\n\u003e v\n\u003e diff(v) \n```\n\n## 11. Graphiques\n\nR propose plusieurs fonctions pour g√©n√©r√© des graphiques.\n\n### 11.1. Exemple\n\n```r\n\u003e age \u003c- read.table(\"/home/tludwig/master2ggb/age.tsv\")\n\u003e plot(age$V1)\n\u003e hist(age$V1)\n\u003e hist(age$V1, breaks=seq(0,330,by=30) )\n\u003e hist(age$V1, breaks=seq(0,330,by=15) )\n\u003e data=c(1,3,6,4,9)\n\u003e colors=c(\"red\",\"yellow\",\"green\",\"blue\",\"purple\")\n\u003e cat=c(\"Bad\",\"Warning\",\"Good\",\"OK\",\"Unknown\")\n\u003e pie(data,main=\"Show\", col=colors, labels=data, cex=0.8)\n\u003e legend(-1.5,0.5, cat, cex=0.8, fill=colors)\n\u003e boxplot(sample.int(101,size=100,replace=TRUE)-1) # boxplot de 100 valeurs au hasard entre 0 et 100\n```\n\n### 11.2. Export d'un graphique dans une image\n\n```r\n\u003e age \u003c- read.table(\"/home/tludwig/master2ggb/age.tsv\")\n\u003e png(filename = \"monhistogramme.png\", bg = \"white\");\n\u003e hist(age$V1, breaks=seq(0,330,by=15) )\n\u003e dev.off();\n```\n\n![](http://lysine.univ-brest.fr/~tludwig/graphR.png)\n\n### 11.3. Fonctions graphiques\n\n| Fonction | Description |\n|---|---|\n| `plot(x)` | graphe des valeurs de `x` (sur l‚Äôaxe des `y`) ordonn√©es sur l‚Äôaxe des `x` |\n| `plot(x, y)` | graphe bivari√© de `x` (sur l‚Äôaxe des `x`) et `y` (sur l‚Äôaxe des `y`) |\n| `sunflowerplot(x,y)` | idem que `plot()` mais les points superpos√©s sont dessin√©s en forme de fleurs dont le nombre de p√©tales repr√©sente le nombre de points |\n| `pie(x)` | graphe en camembert |\n| `boxplot(x)` | graphe boites et moustaches |\n| `stripchart(x)` | graphe des valeurs de `x` sur une ligne (une alternative √† `boxplot()` pour des petits √©chantillons) |\n| `coplot(x~y \\| z)` | graphe bivari√© de `x` et `y` pour chaque valeur (ou intervalle de valeurs) de `z` |\n| `interaction.plot(f1,f2,y)` | si `f1` et `f2` sont des facteurs, graphe des moyennes de `y` (sur l‚Äôaxe des `y`) en fonction des valeurs de `f1` (sur l‚Äôaxe des `x`) et de `f2` (diff√©rentes courbes) ; l‚Äôoption `fun` permet de choisir la statistique r√©sum√©e de `y` (par d√©faut `fun=mean`) |\n| `matplot(x,y)` | graphe bivari√© de la 1$^{√®re}$ colonne de `x` contre la 1$^{√®re}$ de `y`, la 2$^{√®me}$ de `x` contre la 2$^{√®me}$ de `y`, etc. |\n| `dotchart(x)` | si `x` est un tableau de donn√©es, dessine un graphe de Cleveland (graphes superpos√©s ligne par ligne et colonne par colonne) |\n| `fourfoldplot(x)` | visualise, avec des quarts de cercles, l‚Äôassociation entre deux variables dichotomiques pour diff√©rentes populations (`x` doit √™tre un tableau avec `dim=c(2, 2, k)` ou une matrice avec `dim=c(2, 2)` si `k = 1`) |\n| `assocplot(x)` | graphe de Cohen‚ÄìFriendly indiquant les d√©viations de l‚Äôhypoth√®se d‚Äôind√©pendance des lignes et des colonnes dans un tableau de contingence √† deux dimensions |\n| `mosaicplot(x)` | graphe en *mosa√Øque* des r√©sidus d‚Äôune r√©gression log-lin√©aire sur une table de contingence |\n| `pairs(x)` | si `x` est une matrice ou un tableau de donn√©es, dessine tous les graphes bivari√©s entre les colonnes de `x` |\n| `plot.ts(x)` | si `x` est un objet de classe `\"ts\"`, graphe de `x` en fonction du temps, `x` peut √™tre multivari√© mais les s√©ries doivent avoir les m√™mes fr√©quence et dates |\n| `ts.plot(x)` | idem mais si `x` est multivari√© les s√©ries peuvent avoir des dates diff√©rentes et doivent avoir la m√™me fr√©quence |\n| `hist(x)` | histogramme des fr√©quences de `x` |\n| `barplot(x)` | histogramme des valeurs de `x` |\n| `qqnorm(x)` | quantiles de `x` en fonction des valeurs attendues selon une loi normale |\n| `qqplot(x, y)` | quantiles de `y` en fonction des quantiles de `x` |\n| `contour(x, y, z)` | courbes de niveau (les donn√©es sont interpol√©es pour tracer les courbes), `x` et `y` doivent √™tre des vecteurs et `z` une matrice telle que `dim(z)=c(length(x), length(y))` (`x` et `y` peuvent √™tre omis) |\n| `filled.contour (x, y, z)` | idem mais les aires entre les contours sont color√©es, et une l√©gende des couleurs est √©galement dessin√©e |\n| `image(x, y, z)` | idem mais les donn√©es sont repr√©sent√©es avec des couleurs |\n| `persp(x, y, z)` | idem mais en perspective |\n| `stars(x)` | si `x` est une matrice ou un tableau de donn√©es, dessine un graphe en segments ou en √©toile o√π chaque ligne de `x` est repr√©sent√©e par une √©toile et les colonnes par les longueurs des branches |\n| `symbols(x, y, ...)` | dessine aux coordonn√©es donn√©es par `x` et `y` des symboles (cercles, carr√©s, rectangles, √©toiles, thermom√®tres ou *boxplots*) dont les tailles, couleurs, etc, sont sp√©cifi√©es par des arguments suppl√©mentaires |\n| `termplot(mod.obj)` | graphe des effets (partiels) d‚Äôun mod√®le de r√©gression (`mod.obj`) |\n\n## 12. Commandes du syst√®me d'exploitation\n\nIl est possible de lancer, depuis R, des commandes appartenant au syst√®me d'exploitation (ici linux).\n\nCela peut-√™tre utile en particulier pour demander l'ex√©cution d'un programme externe, qui va lire/modifier/cr√©er des fichiers dont les donn√©es pourront ensuite √™tre exploit√©es par R. \n```r\n\u003e ta=read.table(\"generated.tsv\") # erreur, le fichier n'existe pas\n\u003e system(\"/home/tludwig/master2ggb/generate_data.sh\") #execution d'un programme qui genere des donnees\n\u003e ta=read.table(\"generated.tsv\") #maintenant le fichier existe\n\u003e ta\n```\n\nIl est √©galement possible de r√©cuperer directement le r√©sultat d'une commande.\n```r\n\u003e existing=system(\"ls /home\", intern=TRUE) #quels utilisateurs existent sur ce serveur ?\n\u003e existing\n\u003e loggedin=system(\"who | cut -d' ' -f1 | sort -u\", intern=TRUE) #quels utilisateurs sont actuellement presents ?\n\u003e loggedin\n```\n\n## 13. Import\n\nPour ne pas avoir √† retaper sans cesse les m√™mes commandes et r√©√©crire les m√™mes fonctions, il est possible de les stocker dans des fichiers (monfichier.R) et de les charger en cas de besoin.\n\nDans ces fichiers, on pourra mettre des scripts (successions de commandes ex√©cut√©es automatiquement) ou des fonctions que l'on a d√©fini nous m√™me et qui pourront √™tre appel√©es quand n√©cessaire.\n\nIl est √©galement possible d'importer des librairies (ensemble de fichiers, publiquement disponibles) dans R.\n\nPour importer un fichier R, on utilise la fonction `source()`, tandis que pour importer des librairies, on utilise `library()`\n\n```r\n\u003e library(ggplot2)\n\u003e source(\"/home/tludwig/master2ggb/script.R\") #chargement d'un script, qui s'execute\n\u003e d\u003c-getdata() #Error: could not find function \"getdata\"\n\u003e source(\"/home/tludwig/master2ggb/functions.R\") #chargement du fichier qui contient la fonction\n\u003e d\u003c-getdata() #maintenant la fonction est connue\n\u003e d\n```\n\n## 14. which\n\nPour un vecteur logique (qui contient des valeurs `TRUE`/`FALSE`), la commande which donne les indices du vecteurs dont la valeur est `TRUE` :\n\n```r\n\u003e LETTERS #un vecteur qui contient chaque lettre de l'alphabet\n\u003e LETTERS == \"U\" #un vecteur qui contient TRUE si la lettre est \"U\"\n\u003e which(LETTERS == \"U\") #quelle est la position de U dans l'alphabet\n\n\u003e 1:150 #un vecteur qui contient les valeurs entre 1 et 150\n\u003e 1:150 %% 17 == 0 #un vecteur qui contient TRUE si la valeur est multiple de 17\n\u003e which(1:150 %% 17 == 0) #les multiples de 17 entre 1 et 150\n```","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/Evaluations/2022-2023-Evaluation-UE-Bioinformatique":{"title":"2022-2023 Evaluation UE Bioinformatique","content":"\n###### tags #m2ggb #bioinfo\n*contact :* ludwig@univ-brest.fr \n\n\u003e [!success] Envoyer les r√©ponses par mail sous format PDF. \n\u003e \n\u003e Les r√©ponses justifi√©es et pr√©sent√©es proprements seront mieux not√©es.\n\n## Unix\n\n1. Que fait la commande suivante `cat fichier | cut -f3 | grep \"BRCA1\" | wc -l`\n2. Ecrire une commande qui ne garde que les lignes qui **ne** contiennent **pas** pas le texte *SUCCESS*\n3. Vous avez un fichier par g√®ne dans un r√©pertoire. Chaque fichier est nomm√© `nom_du_gene.gene`. Il n'y a pas d'en-t√™te dans le fichier et les lignes du tableaux suivent le format suivant :\n\n| chromosome  | position (entier) | nom_du_gene | score (entier) |\n|-----|----------|------|-------|\n| 17  | 41197210 | CFTR | 117   |\n| 17  | 41197231 | CFTR | 4     |\n| 17  | 41197300 | CFTR | 67814 |\n| ... | ...      | ...  | ...   |\n| 17  | 41215385 | CFTR | 325   |\n| 17  | 71223165 | CFTR | 6487  |\n\nEcrire une suite de commandes (avec `|`) pour trouver le nom du g√®ne avec le variant qui poss√®de le plus grand score.\n\n## FastQ\n\n4. Que fait la commande suivante. Commentez son r√©sultat:\n    ```\n    cat monfichier.fastq | wc -l\n    12007\n    ```\n5. Dans un FastQ, une base a une qualit√© $Q=17$, qu'en pensez-vous ?\n6. Quelle est la probabilit√© d'erreur pour une base de qualit√© `B` ?\n7. Ecrire une commande qui compte le nombre de reads dans un fichier fastq\n\n\n## SAM/BAM\n\n8. Quels sont les fichiers d'entr√©e n√©cessaires pour obtenir un alignement BAM/SAM ?\n9. Un read poss√®de le FLAG `99` quel sera vraissemblement le FLAG de son *mate* ? Expliquez\n10. Expliquer les CIGAR suivants et pr√©ciser la longueur du read dans chaque cas:\n    - 120M\n    - 50M3D47M\n    - 140M10S\n11. Ecrire une commande qui compte le nombre de reads avec du hard clipping\n12. Si la r√©f√©rence est `CCTCGGTATCTTTCTAGAAGTCCTCGT` et que le read est `CCCCGGTATCTTGTCTAGAAGTCTCGT`, quel sera le CIGAR ?\n13. Pourquoi faut-il trier les fichiers BAM ?\n14. Dans un fichier BAM qui contient plusieurs individus, quel attribut permet de differencier les reads d'un individu donn√© ?\n\n## VCF\n\n15. Un fichier VCF pos√®de la ligne suivante, quelles sont les all√®les (lettres) de chaque individu ? Combien y a-t'il d'homozygotes ? Qui a une pronfondeur de couverture (depth) de plus de 20 ?\n\n    | `#CHROM` | POS | ID | REF | ALT | [...] | FORMAT | alice | bob | charlie | david | eve | frank |\n    |---|---|---|---|---|---|---|---|---|---|---|---|---|\n    | chr12 | 45671 | . | C | T,A | [...] | GT:DP:GQ | 0/0:32:99 | 0/1:21:99 | 1/1:13:60 | 0/2:60:99 | 1/1:8:10 | ./.:.:. |\n    \n16. Pourquoi serait-il √©trange de voir la ligne suivante dans un fichier VCF ?\n\n    | `#CHROM` | POS | ID | REF | ALT | [...] | FORMAT | alice | bob | charlie     | david | eve | frank |\n    |---|---|---|---|---|---|---|---|---|---|---|---|---|\n    |chr12 | 57954 | . | G | C | [...] | GT:DP:GQ | 0/0:32:99 | 0/0:21:99 |     ./.:.:. | 0/0:60:99 | 0/0:8:10 | ./.:.:.|\n\n17. Ecrire une commande qui permet de compter le nombre de sites variants dans un fichier VCF\n18. \u003c!--Ecrire une commande qui permet de compter le nombre de variants multiall√®liques (sites variants avec plusieurs all√®les alternatifs)--\u003e\n19. Ecrire une commande qui permet de compter le nombre d'individus dans un fichier VCF.\n    *Je vous sugg√®re d‚Äôutiliser la commande* `tr` *quelque part, mais ce n‚Äôest pas obligatoire.*\n20. La recalibration d'un fichier VCF par VQSR permet de classer les variants dans des *tranches*. Pourquoi int√©grer (ou non) un nombre important de tranches dans une analyse peut-il √™tre int√©ressant ?\n\n## Base de Donn√©es et Annotations\n\n21. GnomAD r√©pertorie la fr√©quence des variants dans plusieurs population. Pourquoi est-il souhaitable de filtrer les variants en fonction de leur fr√©quence ?\n22. Quelle est la frequence dans FrEx du variant `rs192173389`. \n23. Ce variant vous semble t-il avoir √©t√© bien couvert lors du s√©quen√ßage ?\n24. Comment interpretez vous ses scores SIFT/Polyphen ?\n25. A quelle classe d'*Impact* appartient l'annotation *missense_variant* ? D'apr√®s-vous pourquoi est-elle dans cette classe ?\n26. L'acide amin√© impact√© par le variant `rs545014063` vous semble t'il tr√®s conserv√© chez les vert√©br√©s ?\n27. Pour ce m√™me variant, en vous basant sur les annotations CADD, quel all√®le est le plus d√©l√©t√®re et quel semble √™tre l'all√®le ancestral ?\n\n**Dans USCS (Genome Human GRCh37/hg19) chercher le variant : rs113993960**\n\n28. Quel g√®ne est impact√©\n29. Quels sont les nucl√©otides et l'acides amin√©s impact√©s par ce variant\n30. En survolant l'acide amin√© avec votre souris, dans quel exon du g√®ne se trouve cet acide amin√© ? \n31. En zoomant en arri√®re, quels transcrits sont impact√©s/non-impact√©s par ce variant. (afficher les donn√©es de `Ensembl Genes`)\n32. En affichant en \"Full\" les donn√©es de `OMIM Alleles` quel est la cons√©quence de ce variant sur la prot√©ine. Quelle pathologie peut en d√©couler ?\n\n\u003c!--\n## Que font les commandes suivantes :\n\n28. cat monfichier.fastq | paste - - - - | cut -f2 | grep \"ACGTGCGCGCGTG\"\n29. cat monfichier.sam | grep -v \"^@\" | cut -f6 | grep \"H\" | wc -l\n30. cat monfichier.vcf | grep -v \"#\" | cut -f11 | cut -c1-3 | sort | uniq -c\n--\u003e\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Cours/M2GGB/TP-M2GGB":{"title":"TP M2GGB","content":"\n###### tags #m2ggb\n*contact :* ludwig@univ-brest.fr \n\n## 1. Pr√©paration \n\u003c!--\n### 1.0. Visio\n\n:::danger \n:warning: ***Connexion √† EduRoam***\n\nSi vous √™tes en distanciel ou que vous n'arrivez pas √† vous connecter √† `EduRoam` il faudra\n\n1. T√©l√©charger et Installer [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\n2. T√©l√©charger et ouvrir la machine virtuelle [http://lysine.univ-brest.fr/~tludwig/m2ggb/U1078GGB.zip](http://lysine.univ-brest.fr/~tludwig/m2ggb/U1078GGB.zip)  contenant les donn√©es et programme pour le TP \n3. Extraire les fichier `.vbox` et `.vdi` du zip et ouvrir le fichier `.vbox` avec VirtualBox\n\nLancer la Virtual Box, mais avant de cliquer sur `D√©marrer`, il faut cliquer sur `Oublier`\n\n:::\n--\u003e\n### 1.1. Windows - T√©l√©charger MobaXTerm\n\nT√©l√©charger sur [https://mobaxterm.mobatek.net/download-home-edition.html](https://mobaxterm.mobatek.net/download-home-edition.html)\n- *[Installer edition](https://download.mobatek.net/2132021082033134/MobaXterm_Installer_v21.3.zip)* sur dans la plupart des cas\n- *[Portable edition](https://download.mobatek.net/2132021082033134/MobaXterm_Portable_v21.3.zip)* sur vous n'avez pas les droits d'administrateur sur vous ordinateur\n\n### 1.2. Mac / Linux - Attendre que les autres t√©l√©chargent MobaXTerm\n\nSur Mac, vous pouvez rep√©rer comment faire certains caract√®res utiles avec votre clavier:\n\n| Caract√®re | Touches |\n|---|---|\n| \\| | `alt + shift + l` |\n| `~` | `alt + n` |\n| `[` | `alt + shift + (` |\n| `]` | `alt + shift + )` |\n| `{` | `alt + (` |\n| `}` | `alt + )` |\n\n## 2. Connection au serveur\n\nListe des logins:\n\n| Nom | Login |\n|---|---|\n| Axelle Autret | aautret |\n| Morgane Ayella | mayella |\n| Elora Bellenoue | ebellenoue |\n| Theo Benvenuti | tbenvenuti |\n| Wiam Echih | wechih |\n| Pauline Foliard | pfoliard |\n| Valentine Hoyau | vhoyau |\n| Mouhammad Merhi | mmerhi |\n| Abrahan Mendoza | amendoza |\n| Imane Naouadir | inaouadir |\n| Taghrid Nasser | tnasser |\n| Nada Ouali | nouali |\n| Emile Simon | esimon |\n\n### 2.1. Windows\n\n- Ouvrez MobaXTerm\n- Cliquez sur Session\n- ***Remote host*** : `methionine.univ-brest.fr`\n- Specify username :ballot_box_with_check: **`login`**\n- Port: 4444\n- :heavy_check_mark: ***OK***\n\n![](https://lysine.univ-brest.fr/~tludwig/mobaxtermdopamine.png)\n\nTaper votre mot de passe \n\n\u003e [!warning] C'est normal que rien ne s'affiche (pas de *****) \n\n### 2.2. Mac/Linux\n\nOuvrez le programme ***Terminal*** (dans ***/Applications/Utilitaires***)et tapez:\n\n\u003e [!warning] Remplacer `login` par votre login...\n\n```\nssh -p 4444 -X login@methionine.univ-brest.fr\n```\n\nTaper votre mot de passe \n\n\u003e [!warning] C'est normal que rien ne s'affiche (pas de *****) \n\n## 3. Avant de commencer\n\n\u003e [!danger] Faites attention √† ce que vous tapez  \n\u003e \n\u003e - Les majuscules/minuscules ne peuvent pas √™tre interverties (la plupart du temps)\n\u003e - Les espaces/absences d'espaces sont importants (en revanche le nombre d'espace n'est pas important)\n\u003e \n\u003e Un humain peut comprendre la phrase *\"hiermatin j'ai VU un√©l√© pHant\"* mais pour une machine c'est plus difficile (et en r√©alit√© pas du tout souhaitable): la syntaxe et la grammaire doivent √™tre respect√©es.\n\u003e \n\u003e Ces commandes sont donc diff√©rentes:\n\u003e ```bash\n\u003e #fonctionnera\n\u003e cat monfichier | grep -v \"quelque chose\" \n\u003e \n\u003e #ne fonctionneront pas:\n\u003e cat monfichier | grep -V \"quelque chose\"\n\u003e CAT monfichier | grep -v \"quelque chose\"\n\u003e cat monfichier | grep-v \"quelque choset\"\n\u003e cat monfichier | grep - v \"quelque chose\"\n\u003e catmonfichier | grep -v \"quelque chose\"\n\u003e ```\n\n\u003e [!success] :notebook: **Prise de Note**\n\u003e - Il faudra probablement prendre des notes pendant le TP.\n\u003e - √ßa sera plus facile sur notepad/notepad++/sublimtext ou encore mieux https://hackmd.io/ o√π il suffira de copier coller l'ensemble du TP avant d'y ajouter notes ou commentaires\n\u003e - Si vous copiez des commandes dans word/openoffice/libreoffice/googledrive... il y a de grandes chances pour que certains caract√®res soient remplac√©s et que la commande ne marche plus une fois recopi√©e dans le terminal unix.\n\n## TP Bioinfo\n\n\u003e [!danger] :bomb: ***Evaluation*** √† rendre pour le 21 Novembre 2022 :skull:\n\u003e - [[2022-2023 Evaluation UE Bioinformatique]]\n\n- [[BioInfo TP1 - Unix \u0026 Linux]]\n- [[BioInfo TP2 - Next Generation Sequencing]]\n- [[BioInfo TP3 - Interpr√©tation d‚Äôun fichier de variants (VCF) issu d‚Äôune analyse NGS]]\n- [[BioInfo TP4 - NGS Data Processing]]\n\nPour aller plus loin\n- [[BioInfo - Exercices Bash]]\n- [[Bioinfo - Programmer en AWK]]\n- [[BioInfo - Introduction √† Python]]\n\n## TP Epid√©mio\n\n- [[Epid√©miologie TP1 - R]]\n- [Bases de Donn√©es](https://lysine.univ-brest.fr/~tludwig/master2/2022_M2_Genet_Epidemio_TP1_TLU.pdf)","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Sysadmin/User-Documentation/CondaU1078":{"title":"Conda@U1078","content":"\n###### tags #documentation #sysadmin\n\n\u003e [!DANGER] TL;RD From 2022/07/08 what is changing for you\n\u003e 1. Unless you edit you `.condarc` file, the ***base*** environment will not be automatically activated \n\u003e 2. Your environment were moved to `/PROGS/conda/username/envs` so don't load them with full path: use `conda activate myenv` instead of `conda activate /the/old/path/to/myenv`\n\n## Problem with Rscript\n\n\u003e [!DANGER] If Rscript doesn't work anymore, with this error: \n\u003e `Rscript execution error: No such file or directory`\n\u003e you can solve the problem by typing: `conda update r-base`\n\n## Introduction\n\nSo as to be mutualized on all servers, `conda` is preconfigured by default as follows :\n\nThe configuration file `/home/username/.condarc` on all server is a link to the file `/PROGS/conda/username/condarc`\n\nAlso the environments are stored in `/PROGS/conda/username/envs`. This guarantees that an environment created from one server is also available on all other servers. Conda Packages will be stored in  `/PROGS/conda/username/pkgs` because this disk will be larger and it will free space in the `/home` disk from each server.\n\n\u003e [!INFO]\n\u003e Conda is loaded be default for all users (some lines are added to you `.bashrc`). So the `conda` command line should be available to everyone upon log-in. By default, the *base* environment **will NOT** be loaded.\n\n## The default configuration file \n\nThe default configuration file is as follows, and can be edited by the user:\n\n```yaml\nchannels:\n  - r\n  - conda-forge\n  - bioconda\n  - defaults\nchannel_priority: disabled\nenv_prompt: '{name}\u003e'\nenvs_dirs:\n  - /PROGS/conda/XXXXXXXX/envs\n  - /PROGS/conda/common/envs\npkgs_dirs:\n  - /PROGS/conda/XXXXXXXX/pkgs\nauto_activate_base: false\n```\n\n`channel_priority`: Can be `strict`, `flexible` or `disabled`. ***Strict*** is faster, but has more risks of failing on packages installation. \n`env_prompt`: The ways the environment's name is displayed in your prompt\n`auto_activate_base`: Set to ***TRUE*** if you want the base environment to be activated upon log-in\n\n## Common environments\n\nBy default, when you create as environment, it will be stored in `/PROGS/conda/username/envs` and it will be private to you.\nEverybody is also able to access `/PROGS/conda/common/envs` which holds environments that might be usefull for several users (related to a project or a pipeline).\n\n\n## Creating an environment\n\nExample : \n\nAn environment name *myproject* on python 3.9 with `snakemake` `R` 4.1.3 and R package `stringi` \n\n```bash\nconda create -n myproject python=3.9\nconda activate myproject\nconda install -y snakemake\nconda install -y -c conda-forge r-base=4.1.3\nconda install -y -c conda-forge r-stringi\n````\n\n## Listing environments\n\n`conda info --envs`\n\n## Joining/Leaving environment\n\n- Join: `conda activate myproject`\n- Leave: `conda deactivate`\n\n\u003e [!DANGER]\n\u003e Don't use full path like `/WORKING_DIRECTORY/xxxxxx/.conda/envs/myproject` everything is stored in `/PROGS/conda` now.\n\u003e The syntax is the same for personnel/common environments :\n\u003e ```bash\n\u003e conda activate MYenv\n\u003e conda activate COMMONenv\n\u003e ```\n\n## Publishing an environment as common\n\nType the command `conda_publish privatename publicname`\n\nwhere `privatename` is the current name of one of YOUR environments and `publicname` will be the name of the shared env. \n\u003e [!WARNING]\n\u003e - The names **MUST** be different\n\u003e - This will only work is you belong to the `bioinfo` unix group.\n\u003e - Only members of `bioinfo` can modify a common env\n\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Sysadmin/User-Documentation/Mettre-%C3%A0-disposition-des-fichiers-via-https":{"title":"Mettre √† disposition des fichiers via https","content":"\n###### tags #documentation #sysadmin\n\nCr√©er des fichiers et r√©pertoires:\n```bash\nmkdir -p ~/public_html/share\necho \"AuthType Basic\" \u003e ~/public_html/share/.htaccess\necho \"AuthName \\\"Password Protected Area\\\"\" \u003e\u003e ~/public_html/share/.htaccess\necho \"AuthUserFile \\\"/home/`whoami`/public_html/share/.htpasswd\\\"\" \u003e\u003e ~/public_html/share/.htaccess\necho \"Require valid-user\" \u003e\u003e ~/public_html/share/.htaccess\n```\n\nG√©n√©rer un mot de passe pour l'utilisateur `download`\n```bash\nhtpasswd -c ~/public_html/share/.htpasswd download\n```\n\nAjuster les droits\n```bash\ncp /path/to/my/files/*.fastq* ~/public_html/share\nchmod 775 ~/public_html\nchmod 775 ~/public_html/share\nchmod 664 ~/public_html/share/.htpasswd\nchmod 664 ~/public_html/share/.htaccess\n```\n\nCopier les fichiers et ajuster les droits \n\n\u003e [!DANGER] adapter le chemin des fichier d'origines\n\n```bash\ncp /path/to/my/files/* ~/public_html/share\nchmod 664 ~/public_html/share/*\n```\n\nLes fichiers seront acc√©ssibles dans sur https://lysine.univ-brest.fr/~USER/share/ \n- identifiant \"download\"\n- password (celui choisi plus haut)  \n\u003e [!DANGER] REMPLACER `USER` par l'identifiant du compte unix utilis√©\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Sysadmin/User-Documentation/Tutorials":{"title":"Tutorials","content":"\n###### tags #documentation #sysadmin\n\n## How-To\n\n- [[Conda@U1078]]\n- [[Mettre √† disposition des fichiers via https]]\n\n\u003e [!INFO] **Paralleliser avec `xargs`**\n\u003e \n\u003e The xargs command can be used to run the same script with differente arguments, in parallel\n\u003e - the -P*n* arguments allows xargs to use at most *n* processors at all time\n\u003e - the -l arguments tells to read each line as a list of arguments.\n\u003e \n\u003e *Example*\n\u003e Considere a script script.sh . We want to launch that script 1000 times, using at most 8 processors.\n\u003e \n\u003e We put the arguments of the script in a file arguments.lst, and execute :\n\u003e \n\u003e `cat arguments.lst | xargs -l -P8 ./script.sh`\n\n\u003e [!WARNING] **R√©cup√©rer des fichiers effac√©s/corrompus**\n\u003e \n\u003e 1. Trouver le fiesystem qui contient le fichier : `df .`\n\u003e 2. Aller dans le r√©pertoire du filesystem (ex `cd /mnt/projects1/`)\n\u003e 3. Aller dans le r√©pertoire cach√© zfs `cd .zfs/snashot`\n\u003e 4. Rep√©rer une date de sauvegarde qui pourrait contenir une version acceptable du fichier (ex `cd zfs-auto-snap_monthly-2022-10-01-0452`)\n\u003e 5. Copier le fichier depuis ce r√©pertoire vers le bon r√©pertoire de travail\n\n## Cours M2GGB\n\nDes TP de bioinfo, des tutoriaux informatiques et des exercies sont disponibles en bas de cette page : [[TP M2GGB]]\n\n\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Sysadmin/User-Documentation/U1078-Servers":{"title":"U1078 Servers","content":"\n###### tags #documentation #sysadmin\n\n## Servers\n\n| Server | Address | Cores | RAM | OS |\n|---|---|---|---|---|\n| alanine | 193.54.252.59 | 64 @2.2Ghz | 384Go DDR3 | Ubuntu 22.04.1 LTS *Jammy Jellyfish* |\n| lysine  | 193.54.252.69 | 48 @2.3Ghz | 384Go DDR4 | Ubuntu 22.04.1 LTS *Jammy Jellyfish* |\n| serine  | 193.54.252.17 | 56 @2.4Ghz | 512Go DDR4 | Ubuntu 22.04.1 LTS *Jammy Jellyfish* |\n| valine  | 193.54.252.16 | 56 @2.4Ghz | 512Go DDR4 | Ubuntu 22.04.1 LTS *Jammy Jellyfish* |\n\n### FileSystem\n\nEach user has 4 personnal directories\n- `/home/username` this directory is private to each server\n- `/WORKING_DIRECTORY/username` (linked to `/home/username/working_directory` ) this directory is shared accross all servers\n- `/PROGS/conda/username` which stores conda libraries and environments\n- `/PROGS/scripts/username` in which the scripts you are developping should be stored\n    - This also to separate scripts from PROJECTS data, thus granted acces to your scripts to other users, thatare not allows to access the same projects as you\n    - The subdirectory `/PROGS/scripts/username/bin` is available in your path. By symlinking a scripts to this directory, it makes it available from any directory. Ex `ln -s /PROGS/scripts/username/ProjectsA/Sorting/mybestsortingalgorithm.sh /PROGS/scripts/username/bin`\n\nThere are also some directories shared accross the servers\n- `/PROGS` that contains available programs\n    - `/PROGS/EXTERN` that contains public softwares\n    - `/PROGS/INTERN` that contains tools developed in the research unit\n- `/PUBLIC_DATA` that contains data from public databases\n- `/PROJECTS` that contains one directory by project. These directories are protected. Content is available to all authorized users.\n\n## Authentication\n\nYour account name is the first letter of your firstname, following by your lastname.\n*Example: **√âlias de Kelliwic'h*** :arrow_right:  `edekelliwich`\n\nConnection to the server via `ssh` is protected by double authentication:\n- password\n- TOTP by Google Authenticator\n\n### Password\n\n#### Rules\n\n- At least 12 characters\n- At least one of each : Uppercase, Lowercase, Number, Other\n- Longest repeat (aaa, 111,+++): 3\n- Longest sequence (abc,123,zyx,987): 3\n- Different from the 5 previous passwords\n- At most 9 characters in common with previous password\n- Username is not present (straight or reversed) in the password\n- Password will expire once a year\n\n#### Command\n\nTo change you password, type on each server : `passwd`\n\n### Google Authenticator\n\nGoogle authenticator is a tool to generate a 6-digits code.\n- A new code will be generated every 30s\n- Each code is valid during 4 minutes\n- Each code is only valid once (on each server)\n\n\u003e [!WARNING] For this system to work, the time on your computer must be correct !\n\nWhen your action is create, you will received from `U1078GGB.servers@univ-brest.fr` a mail looking like this:\n\n\u003e [!INFO]\n\u003e Your new secret key is: **MRKJP3LAHJKWYFE6AFUHSUGWL3**\n\u003e Your verification code is 049804\n\u003e Your emergency scratch codes are:\n\u003e   *95863214*\n\u003e   *50189304*\n\u003e   *90746054*\n\nYou will need to install either\n- Google Authenticator on your smartphone\n- Auhenticator plugin in Chrome\n- both\n\n#### Google Authenticator on Chrome\n\n- Go to [this link](https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai)\n- Install and Enable the plugin\n- Click on the ![](https://lh3.googleusercontent.com/LEgohRXYMasRoU-SXiJrkH_LsMMMgpKERWbOCpofID-cbbtKm4DjovRnDo2eiyvWBGcOUSjvQmBPOGKJW7g8y1aJCw=w128-h128-e365-rj-sc0x00ffffff) Icon in the Browser\n- Click on the :pencil2: Icon\n- Click on :heavy_plus_sign: \n- Click on \"Sasie Manuelle\"\n    - *Emetteur* : U1078Servers\n    - *Secret* : Your secret key from the mail\n    - **OK**\n\n#### Google Authenticator on Android\n\n- From THe Plugin in chrome, click on the square icon next to the code\n- Scan from your smartphone\n\n## Connection\n\nConnection on the servers is done via the `ssh` protocole.\n\n\u003e [!DANGER] Nothing is displayed when typing your password (no ********)\n\n\u003e [!WARNING] On the first connection, your default password is expired, you'il need to change it **on each server**\n\u003e \n\u003e The sequence is as follow:\n\u003e 1. Enter your **current** password:  `O1d_P4ssword`\n\u003e 2. Enter the verification code from google authenticator\n\u003e 3. Your password is expired, you will be required to change it: enter (again) your **current** password\n\u003e 4. Enter your **new** password (it must respect the rules)\n\u003e 5. Enter a second time your **new** password (for confirmation)\n\u003e 6. Your session will close automatically, login once again\n\n### Windows\n\n- Download MobaXterm from the [link](https://mobaxterm.mobatek.net/download-home-edition.html).\n- Install it\n- Launch it\n- Click on *session \u003e ssh*\n- Remote host: Enter the name of the server (alanine, lysine, serine or valine)\n- Check *specify username*\n- Enter you username\n- Click **OK**\n\n### Mac/Unix\n\nIf your login is **edekelliwich** and you want to connect to serine\n- Type `ssh -X edekelliwich@serine` (`-X` can be ommited if you don't plan on using the graphical user interface)\n- To copy a local file to the server \n```scp /path/on/you/computer/filename.ext edekelliwich@serine:/path/on/the/server```\n- To copy a file from the server \n```scp edekelliwich@serine:/path/on/the/server/filename.ext /path/on/you/computer/```\n\n### VPN\n\nIf you are not directly connected to the UBO network, you'll need to install and confirgure **EduVPN** (extra credentials are needed)\n\n## Permissions\n\nTo ask for permissions to a group, fill the following form \nhttp://methionine.univ-brest.fr/groupadduser/\n\n## Tutorial\n\n[[Tutorials]]","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/U1078/Templates/default":{"title":"default","content":"\n###### tags #template","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (ÊµãËØï)","content":"\n## Chinese, Japanese, Korean Support\nÂá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ\n\nÏö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.\n\nÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = -1$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"ü™¥ Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'ŸÖÿØŸàŸÜÿ™Ÿä'\n    weight = 1\n```\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/docker":{"title":"Hosting with Docker","content":"\nIf you want to host Quartz on a machine without using a webpage hosting service, it may be easier to [install Docker Compose](https://docs.docker.com/compose/install/) and follow the instructions below than to [install Quartz's dependencies manually](notes/preview%20changes.md).\n## Hosting Quartz Locally\nYou can serve Quartz locally at `http://localhost:1313` with the following script, replacing `/path/to/quartz` with the \nactual path to your Quartz folder.\n\ndocker-compose.yml\n```\nservices:\n  quartz-hugo:\n    image: ghcr.io/jackyzha0/quartz:hugo\n    container_name: quartz-hugo\n    volumes:\n      - /path/to/quartz:/quartz\n    ports:\n      - 1313:1313\n\n    # optional\n    environment:\n      - HUGO_BIND=0.0.0.0\n      - HUGO_BASEURL=http://localhost\n      - HUGO_PORT=1313\n      - HUGO_APPENDPORT=true\n      - HUGO_LIVERELOADPORT=-1\n```\n\nThen run with: `docker-compose up -d` in the same directory as your `docker-compose.yml` file.\n\nWhile the container is running, you can update the `quartz` fork with: `docker exec -it quartz-hugo make update`.\n\n## Exposing Your Container to the Internet\n\n### To Your Public IP Address with Port Forwarding (insecure)\n\nAssuming you are already familiar with [port forwarding](https://en.wikipedia.org/wiki/Port_forwarding) and [setting it up with your router model](https://portforward.com):\n\n1. You should set the environment variable `HUGO_BASEURL=http://your-public-ip` and then start your container.\n2. Set up port forwarding on your router from port `p` to `your-local-ip:1313`.\n3. You should now be able to access Quartz from outside your local network at `http://your-public-ip:p`.\n\nHowever, your HTTP connection will be unencrypted and **this method is not secure**.\n\n### To a Domain using Cloudflare Proxy\n\n1. Port forward 443 (HTTPS) from your machine.\n2. Buy a custom domain (say, `your-domain.com`) from [Cloudflare](https://www.cloudflare.com/products/registrar/). Point a DNS A record from `your-domain.com` to your public IP address and enable the proxy.\n3. Set the environment variables `HUGO_BASEURL=https://your-domain.com`, `HUGO_PORT=443`, and `HUGO_APPENDPORT=false`. Change `1313:1313` to `443:443` for the `ports` in `docker-compose.yml`.\n4. Spin up your Quartz container and enjoy it at `https://your-domain.com`!\n\n### To a Domain using a Reverse Proxy\n\nIf you want to serve more than just Quartz to the internet on this machine (or don't want to use the Cloudflare registrar and proxy), you should follow the steps in the section above (as appropriate) and also set up a reverse proxy, like [Traefik](https://doc.traefik.io/traefik). Be sure to configure your TLS certificates too!\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e üîó Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n‚ùå [Excluding pages from being published](notes/ignore%20notes.md)\n\n## Docker Support\nIf you don't want to use a hosting service, you can host using [Docker](notes/docker.md) instead!\nI would *not use this method* unless you know what you are doing.\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: üé® [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2023-01-27T14:54:35.598959062Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e ‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù ‚Äî Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, the following\ninstructions guide you through installing the proper dependencies to run it locally.\n\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e [!INFO] Docker Support\n\u003e\n\u003e If you have Docker installed already, open your terminal, navigate to your folder with Quartz and run `make docker`\n\nNow that you are happy with how your Quartz instance looks, let's get it hosted!\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)\n","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://beta.operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Login or Register for a new Operand account. Click the verification link sent to your email, and you'll be redirected to the dashboard. (Note) You do not need to enter a credit card to create an account, or get started with the Operand API. The first $10 of usage each month is free. To learn more, see pricing. If you go over your free quota, we'll (politely) reach out and ask you to configure billing.\n2. Create your first index. On the dashboard, under \"Indexes\", enter the name and description of your index, and click \"Create Index\". Note down the ID of the index (obtained by clicking on the index name in the list of indexes), as you'll need it in the next step. IDs are unique to each index, and look something like `uqv1duxxbdxu`.\n3. Click into the index you've created. Under \"Index Something\", select \"SITEMAP\" from the dropdown and click \"Add Source\".\n4. For the \"Sitemap.xml URL\", put your deployed site's base URL followed by `sitemap.xml`. For example, for `quartz.jzhao.xyz`, put `https://quartz.jzhao.xyz/sitemap.xml`. Leave the URL Regex empty. \n5. Get your API key. On the dashboard, under \"API Keys\", you can manage your API keys. If you don't already have an API key, click \"Create API Key\". You'll need this for the next step.\n6. Open `data/config.yaml`. Set `enableSemanticSearch` to `true`, `operandApiKey` to your copied key, and `operandIndexId` to the ID of the index we created from earlier..\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nsearch:\n  enableSemanticSearch: true\n  operandApiKey: \"jp9k5hudse2a828z98kxd6z3payi8u90rnjf\"\n  operandIndexId: \"s0kf3bd6tldw\"\n```\n7. Push your changes to the site and wait for it to deploy.\n8. Check the Operand dashboard and wait for your site to index. Enjoy natural language search powered by Operand!\n","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\nüìÅ [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ‚úèÔ∏è Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary üß†](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinter„ÅÆÊï∞Â≠óËä±Âõ≠](https://garden.oldwinter.top/)\n- [SethMB Work](https://sethmb.xyz/)\n- [Abhijeet's Math Wiki](https://abhmul.github.io/quartz/Math-Wiki/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\nüêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2023-01-27T14:54:35.602959077Z","tags":null}}